#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_31 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with sympy 1.9                        *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_360501912147953484) {
   out_360501912147953484[0] = 0;
   out_360501912147953484[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_360501912147953484[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_360501912147953484[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_360501912147953484[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_360501912147953484[5] = -sin(in_vec[1]);
   out_360501912147953484[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_360501912147953484[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_360501912147953484[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_360501912147953484[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_360501912147953484[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_360501912147953484[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_360501912147953484[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_360501912147953484[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_360501912147953484[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_360501912147953484[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_360501912147953484[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_360501912147953484[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_3740584223096575636) {
   out_3740584223096575636[0] = delta_x[0] + nom_x[0];
   out_3740584223096575636[1] = delta_x[1] + nom_x[1];
   out_3740584223096575636[2] = delta_x[2] + nom_x[2];
   out_3740584223096575636[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_3740584223096575636[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_3740584223096575636[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_3740584223096575636[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_3740584223096575636[7] = delta_x[6] + nom_x[7];
   out_3740584223096575636[8] = delta_x[7] + nom_x[8];
   out_3740584223096575636[9] = delta_x[8] + nom_x[9];
   out_3740584223096575636[10] = delta_x[9] + nom_x[10];
   out_3740584223096575636[11] = delta_x[10] + nom_x[11];
   out_3740584223096575636[12] = delta_x[11] + nom_x[12];
   out_3740584223096575636[13] = delta_x[12] + nom_x[13];
   out_3740584223096575636[14] = delta_x[13] + nom_x[14];
   out_3740584223096575636[15] = delta_x[14] + nom_x[15];
   out_3740584223096575636[16] = delta_x[15] + nom_x[16];
   out_3740584223096575636[17] = delta_x[16] + nom_x[17];
   out_3740584223096575636[18] = delta_x[17] + nom_x[18];
   out_3740584223096575636[19] = delta_x[18] + nom_x[19];
   out_3740584223096575636[20] = delta_x[19] + nom_x[20];
   out_3740584223096575636[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_5064167050965321181) {
   out_5064167050965321181[0] = -nom_x[0] + true_x[0];
   out_5064167050965321181[1] = -nom_x[1] + true_x[1];
   out_5064167050965321181[2] = -nom_x[2] + true_x[2];
   out_5064167050965321181[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_5064167050965321181[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_5064167050965321181[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_5064167050965321181[6] = -nom_x[7] + true_x[7];
   out_5064167050965321181[7] = -nom_x[8] + true_x[8];
   out_5064167050965321181[8] = -nom_x[9] + true_x[9];
   out_5064167050965321181[9] = -nom_x[10] + true_x[10];
   out_5064167050965321181[10] = -nom_x[11] + true_x[11];
   out_5064167050965321181[11] = -nom_x[12] + true_x[12];
   out_5064167050965321181[12] = -nom_x[13] + true_x[13];
   out_5064167050965321181[13] = -nom_x[14] + true_x[14];
   out_5064167050965321181[14] = -nom_x[15] + true_x[15];
   out_5064167050965321181[15] = -nom_x[16] + true_x[16];
   out_5064167050965321181[16] = -nom_x[17] + true_x[17];
   out_5064167050965321181[17] = -nom_x[18] + true_x[18];
   out_5064167050965321181[18] = -nom_x[19] + true_x[19];
   out_5064167050965321181[19] = -nom_x[20] + true_x[20];
   out_5064167050965321181[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_1453781278869036201) {
   out_1453781278869036201[0] = 1.0;
   out_1453781278869036201[1] = 0;
   out_1453781278869036201[2] = 0;
   out_1453781278869036201[3] = 0;
   out_1453781278869036201[4] = 0;
   out_1453781278869036201[5] = 0;
   out_1453781278869036201[6] = 0;
   out_1453781278869036201[7] = 0;
   out_1453781278869036201[8] = 0;
   out_1453781278869036201[9] = 0;
   out_1453781278869036201[10] = 0;
   out_1453781278869036201[11] = 0;
   out_1453781278869036201[12] = 0;
   out_1453781278869036201[13] = 0;
   out_1453781278869036201[14] = 0;
   out_1453781278869036201[15] = 0;
   out_1453781278869036201[16] = 0;
   out_1453781278869036201[17] = 0;
   out_1453781278869036201[18] = 0;
   out_1453781278869036201[19] = 0;
   out_1453781278869036201[20] = 0;
   out_1453781278869036201[21] = 0;
   out_1453781278869036201[22] = 1.0;
   out_1453781278869036201[23] = 0;
   out_1453781278869036201[24] = 0;
   out_1453781278869036201[25] = 0;
   out_1453781278869036201[26] = 0;
   out_1453781278869036201[27] = 0;
   out_1453781278869036201[28] = 0;
   out_1453781278869036201[29] = 0;
   out_1453781278869036201[30] = 0;
   out_1453781278869036201[31] = 0;
   out_1453781278869036201[32] = 0;
   out_1453781278869036201[33] = 0;
   out_1453781278869036201[34] = 0;
   out_1453781278869036201[35] = 0;
   out_1453781278869036201[36] = 0;
   out_1453781278869036201[37] = 0;
   out_1453781278869036201[38] = 0;
   out_1453781278869036201[39] = 0;
   out_1453781278869036201[40] = 0;
   out_1453781278869036201[41] = 0;
   out_1453781278869036201[42] = 0;
   out_1453781278869036201[43] = 0;
   out_1453781278869036201[44] = 1.0;
   out_1453781278869036201[45] = 0;
   out_1453781278869036201[46] = 0;
   out_1453781278869036201[47] = 0;
   out_1453781278869036201[48] = 0;
   out_1453781278869036201[49] = 0;
   out_1453781278869036201[50] = 0;
   out_1453781278869036201[51] = 0;
   out_1453781278869036201[52] = 0;
   out_1453781278869036201[53] = 0;
   out_1453781278869036201[54] = 0;
   out_1453781278869036201[55] = 0;
   out_1453781278869036201[56] = 0;
   out_1453781278869036201[57] = 0;
   out_1453781278869036201[58] = 0;
   out_1453781278869036201[59] = 0;
   out_1453781278869036201[60] = 0;
   out_1453781278869036201[61] = 0;
   out_1453781278869036201[62] = 0;
   out_1453781278869036201[63] = 0;
   out_1453781278869036201[64] = 0;
   out_1453781278869036201[65] = 0;
   out_1453781278869036201[66] = -0.5*state[4];
   out_1453781278869036201[67] = -0.5*state[5];
   out_1453781278869036201[68] = -0.5*state[6];
   out_1453781278869036201[69] = 0;
   out_1453781278869036201[70] = 0;
   out_1453781278869036201[71] = 0;
   out_1453781278869036201[72] = 0;
   out_1453781278869036201[73] = 0;
   out_1453781278869036201[74] = 0;
   out_1453781278869036201[75] = 0;
   out_1453781278869036201[76] = 0;
   out_1453781278869036201[77] = 0;
   out_1453781278869036201[78] = 0;
   out_1453781278869036201[79] = 0;
   out_1453781278869036201[80] = 0;
   out_1453781278869036201[81] = 0;
   out_1453781278869036201[82] = 0;
   out_1453781278869036201[83] = 0;
   out_1453781278869036201[84] = 0;
   out_1453781278869036201[85] = 0;
   out_1453781278869036201[86] = 0;
   out_1453781278869036201[87] = 0.5*state[3];
   out_1453781278869036201[88] = 0.5*state[6];
   out_1453781278869036201[89] = -0.5*state[5];
   out_1453781278869036201[90] = 0;
   out_1453781278869036201[91] = 0;
   out_1453781278869036201[92] = 0;
   out_1453781278869036201[93] = 0;
   out_1453781278869036201[94] = 0;
   out_1453781278869036201[95] = 0;
   out_1453781278869036201[96] = 0;
   out_1453781278869036201[97] = 0;
   out_1453781278869036201[98] = 0;
   out_1453781278869036201[99] = 0;
   out_1453781278869036201[100] = 0;
   out_1453781278869036201[101] = 0;
   out_1453781278869036201[102] = 0;
   out_1453781278869036201[103] = 0;
   out_1453781278869036201[104] = 0;
   out_1453781278869036201[105] = 0;
   out_1453781278869036201[106] = 0;
   out_1453781278869036201[107] = 0;
   out_1453781278869036201[108] = -0.5*state[6];
   out_1453781278869036201[109] = 0.5*state[3];
   out_1453781278869036201[110] = 0.5*state[4];
   out_1453781278869036201[111] = 0;
   out_1453781278869036201[112] = 0;
   out_1453781278869036201[113] = 0;
   out_1453781278869036201[114] = 0;
   out_1453781278869036201[115] = 0;
   out_1453781278869036201[116] = 0;
   out_1453781278869036201[117] = 0;
   out_1453781278869036201[118] = 0;
   out_1453781278869036201[119] = 0;
   out_1453781278869036201[120] = 0;
   out_1453781278869036201[121] = 0;
   out_1453781278869036201[122] = 0;
   out_1453781278869036201[123] = 0;
   out_1453781278869036201[124] = 0;
   out_1453781278869036201[125] = 0;
   out_1453781278869036201[126] = 0;
   out_1453781278869036201[127] = 0;
   out_1453781278869036201[128] = 0;
   out_1453781278869036201[129] = 0.5*state[5];
   out_1453781278869036201[130] = -0.5*state[4];
   out_1453781278869036201[131] = 0.5*state[3];
   out_1453781278869036201[132] = 0;
   out_1453781278869036201[133] = 0;
   out_1453781278869036201[134] = 0;
   out_1453781278869036201[135] = 0;
   out_1453781278869036201[136] = 0;
   out_1453781278869036201[137] = 0;
   out_1453781278869036201[138] = 0;
   out_1453781278869036201[139] = 0;
   out_1453781278869036201[140] = 0;
   out_1453781278869036201[141] = 0;
   out_1453781278869036201[142] = 0;
   out_1453781278869036201[143] = 0;
   out_1453781278869036201[144] = 0;
   out_1453781278869036201[145] = 0;
   out_1453781278869036201[146] = 0;
   out_1453781278869036201[147] = 0;
   out_1453781278869036201[148] = 0;
   out_1453781278869036201[149] = 0;
   out_1453781278869036201[150] = 0;
   out_1453781278869036201[151] = 0;
   out_1453781278869036201[152] = 0;
   out_1453781278869036201[153] = 1.0;
   out_1453781278869036201[154] = 0;
   out_1453781278869036201[155] = 0;
   out_1453781278869036201[156] = 0;
   out_1453781278869036201[157] = 0;
   out_1453781278869036201[158] = 0;
   out_1453781278869036201[159] = 0;
   out_1453781278869036201[160] = 0;
   out_1453781278869036201[161] = 0;
   out_1453781278869036201[162] = 0;
   out_1453781278869036201[163] = 0;
   out_1453781278869036201[164] = 0;
   out_1453781278869036201[165] = 0;
   out_1453781278869036201[166] = 0;
   out_1453781278869036201[167] = 0;
   out_1453781278869036201[168] = 0;
   out_1453781278869036201[169] = 0;
   out_1453781278869036201[170] = 0;
   out_1453781278869036201[171] = 0;
   out_1453781278869036201[172] = 0;
   out_1453781278869036201[173] = 0;
   out_1453781278869036201[174] = 0;
   out_1453781278869036201[175] = 1.0;
   out_1453781278869036201[176] = 0;
   out_1453781278869036201[177] = 0;
   out_1453781278869036201[178] = 0;
   out_1453781278869036201[179] = 0;
   out_1453781278869036201[180] = 0;
   out_1453781278869036201[181] = 0;
   out_1453781278869036201[182] = 0;
   out_1453781278869036201[183] = 0;
   out_1453781278869036201[184] = 0;
   out_1453781278869036201[185] = 0;
   out_1453781278869036201[186] = 0;
   out_1453781278869036201[187] = 0;
   out_1453781278869036201[188] = 0;
   out_1453781278869036201[189] = 0;
   out_1453781278869036201[190] = 0;
   out_1453781278869036201[191] = 0;
   out_1453781278869036201[192] = 0;
   out_1453781278869036201[193] = 0;
   out_1453781278869036201[194] = 0;
   out_1453781278869036201[195] = 0;
   out_1453781278869036201[196] = 0;
   out_1453781278869036201[197] = 1.0;
   out_1453781278869036201[198] = 0;
   out_1453781278869036201[199] = 0;
   out_1453781278869036201[200] = 0;
   out_1453781278869036201[201] = 0;
   out_1453781278869036201[202] = 0;
   out_1453781278869036201[203] = 0;
   out_1453781278869036201[204] = 0;
   out_1453781278869036201[205] = 0;
   out_1453781278869036201[206] = 0;
   out_1453781278869036201[207] = 0;
   out_1453781278869036201[208] = 0;
   out_1453781278869036201[209] = 0;
   out_1453781278869036201[210] = 0;
   out_1453781278869036201[211] = 0;
   out_1453781278869036201[212] = 0;
   out_1453781278869036201[213] = 0;
   out_1453781278869036201[214] = 0;
   out_1453781278869036201[215] = 0;
   out_1453781278869036201[216] = 0;
   out_1453781278869036201[217] = 0;
   out_1453781278869036201[218] = 0;
   out_1453781278869036201[219] = 1.0;
   out_1453781278869036201[220] = 0;
   out_1453781278869036201[221] = 0;
   out_1453781278869036201[222] = 0;
   out_1453781278869036201[223] = 0;
   out_1453781278869036201[224] = 0;
   out_1453781278869036201[225] = 0;
   out_1453781278869036201[226] = 0;
   out_1453781278869036201[227] = 0;
   out_1453781278869036201[228] = 0;
   out_1453781278869036201[229] = 0;
   out_1453781278869036201[230] = 0;
   out_1453781278869036201[231] = 0;
   out_1453781278869036201[232] = 0;
   out_1453781278869036201[233] = 0;
   out_1453781278869036201[234] = 0;
   out_1453781278869036201[235] = 0;
   out_1453781278869036201[236] = 0;
   out_1453781278869036201[237] = 0;
   out_1453781278869036201[238] = 0;
   out_1453781278869036201[239] = 0;
   out_1453781278869036201[240] = 0;
   out_1453781278869036201[241] = 1.0;
   out_1453781278869036201[242] = 0;
   out_1453781278869036201[243] = 0;
   out_1453781278869036201[244] = 0;
   out_1453781278869036201[245] = 0;
   out_1453781278869036201[246] = 0;
   out_1453781278869036201[247] = 0;
   out_1453781278869036201[248] = 0;
   out_1453781278869036201[249] = 0;
   out_1453781278869036201[250] = 0;
   out_1453781278869036201[251] = 0;
   out_1453781278869036201[252] = 0;
   out_1453781278869036201[253] = 0;
   out_1453781278869036201[254] = 0;
   out_1453781278869036201[255] = 0;
   out_1453781278869036201[256] = 0;
   out_1453781278869036201[257] = 0;
   out_1453781278869036201[258] = 0;
   out_1453781278869036201[259] = 0;
   out_1453781278869036201[260] = 0;
   out_1453781278869036201[261] = 0;
   out_1453781278869036201[262] = 0;
   out_1453781278869036201[263] = 1.0;
   out_1453781278869036201[264] = 0;
   out_1453781278869036201[265] = 0;
   out_1453781278869036201[266] = 0;
   out_1453781278869036201[267] = 0;
   out_1453781278869036201[268] = 0;
   out_1453781278869036201[269] = 0;
   out_1453781278869036201[270] = 0;
   out_1453781278869036201[271] = 0;
   out_1453781278869036201[272] = 0;
   out_1453781278869036201[273] = 0;
   out_1453781278869036201[274] = 0;
   out_1453781278869036201[275] = 0;
   out_1453781278869036201[276] = 0;
   out_1453781278869036201[277] = 0;
   out_1453781278869036201[278] = 0;
   out_1453781278869036201[279] = 0;
   out_1453781278869036201[280] = 0;
   out_1453781278869036201[281] = 0;
   out_1453781278869036201[282] = 0;
   out_1453781278869036201[283] = 0;
   out_1453781278869036201[284] = 0;
   out_1453781278869036201[285] = 1.0;
   out_1453781278869036201[286] = 0;
   out_1453781278869036201[287] = 0;
   out_1453781278869036201[288] = 0;
   out_1453781278869036201[289] = 0;
   out_1453781278869036201[290] = 0;
   out_1453781278869036201[291] = 0;
   out_1453781278869036201[292] = 0;
   out_1453781278869036201[293] = 0;
   out_1453781278869036201[294] = 0;
   out_1453781278869036201[295] = 0;
   out_1453781278869036201[296] = 0;
   out_1453781278869036201[297] = 0;
   out_1453781278869036201[298] = 0;
   out_1453781278869036201[299] = 0;
   out_1453781278869036201[300] = 0;
   out_1453781278869036201[301] = 0;
   out_1453781278869036201[302] = 0;
   out_1453781278869036201[303] = 0;
   out_1453781278869036201[304] = 0;
   out_1453781278869036201[305] = 0;
   out_1453781278869036201[306] = 0;
   out_1453781278869036201[307] = 1.0;
   out_1453781278869036201[308] = 0;
   out_1453781278869036201[309] = 0;
   out_1453781278869036201[310] = 0;
   out_1453781278869036201[311] = 0;
   out_1453781278869036201[312] = 0;
   out_1453781278869036201[313] = 0;
   out_1453781278869036201[314] = 0;
   out_1453781278869036201[315] = 0;
   out_1453781278869036201[316] = 0;
   out_1453781278869036201[317] = 0;
   out_1453781278869036201[318] = 0;
   out_1453781278869036201[319] = 0;
   out_1453781278869036201[320] = 0;
   out_1453781278869036201[321] = 0;
   out_1453781278869036201[322] = 0;
   out_1453781278869036201[323] = 0;
   out_1453781278869036201[324] = 0;
   out_1453781278869036201[325] = 0;
   out_1453781278869036201[326] = 0;
   out_1453781278869036201[327] = 0;
   out_1453781278869036201[328] = 0;
   out_1453781278869036201[329] = 1.0;
   out_1453781278869036201[330] = 0;
   out_1453781278869036201[331] = 0;
   out_1453781278869036201[332] = 0;
   out_1453781278869036201[333] = 0;
   out_1453781278869036201[334] = 0;
   out_1453781278869036201[335] = 0;
   out_1453781278869036201[336] = 0;
   out_1453781278869036201[337] = 0;
   out_1453781278869036201[338] = 0;
   out_1453781278869036201[339] = 0;
   out_1453781278869036201[340] = 0;
   out_1453781278869036201[341] = 0;
   out_1453781278869036201[342] = 0;
   out_1453781278869036201[343] = 0;
   out_1453781278869036201[344] = 0;
   out_1453781278869036201[345] = 0;
   out_1453781278869036201[346] = 0;
   out_1453781278869036201[347] = 0;
   out_1453781278869036201[348] = 0;
   out_1453781278869036201[349] = 0;
   out_1453781278869036201[350] = 0;
   out_1453781278869036201[351] = 1.0;
   out_1453781278869036201[352] = 0;
   out_1453781278869036201[353] = 0;
   out_1453781278869036201[354] = 0;
   out_1453781278869036201[355] = 0;
   out_1453781278869036201[356] = 0;
   out_1453781278869036201[357] = 0;
   out_1453781278869036201[358] = 0;
   out_1453781278869036201[359] = 0;
   out_1453781278869036201[360] = 0;
   out_1453781278869036201[361] = 0;
   out_1453781278869036201[362] = 0;
   out_1453781278869036201[363] = 0;
   out_1453781278869036201[364] = 0;
   out_1453781278869036201[365] = 0;
   out_1453781278869036201[366] = 0;
   out_1453781278869036201[367] = 0;
   out_1453781278869036201[368] = 0;
   out_1453781278869036201[369] = 0;
   out_1453781278869036201[370] = 0;
   out_1453781278869036201[371] = 0;
   out_1453781278869036201[372] = 0;
   out_1453781278869036201[373] = 1.0;
   out_1453781278869036201[374] = 0;
   out_1453781278869036201[375] = 0;
   out_1453781278869036201[376] = 0;
   out_1453781278869036201[377] = 0;
   out_1453781278869036201[378] = 0;
   out_1453781278869036201[379] = 0;
   out_1453781278869036201[380] = 0;
   out_1453781278869036201[381] = 0;
   out_1453781278869036201[382] = 0;
   out_1453781278869036201[383] = 0;
   out_1453781278869036201[384] = 0;
   out_1453781278869036201[385] = 0;
   out_1453781278869036201[386] = 0;
   out_1453781278869036201[387] = 0;
   out_1453781278869036201[388] = 0;
   out_1453781278869036201[389] = 0;
   out_1453781278869036201[390] = 0;
   out_1453781278869036201[391] = 0;
   out_1453781278869036201[392] = 0;
   out_1453781278869036201[393] = 0;
   out_1453781278869036201[394] = 0;
   out_1453781278869036201[395] = 1.0;
   out_1453781278869036201[396] = 0;
   out_1453781278869036201[397] = 0;
   out_1453781278869036201[398] = 0;
   out_1453781278869036201[399] = 0;
   out_1453781278869036201[400] = 0;
   out_1453781278869036201[401] = 0;
   out_1453781278869036201[402] = 0;
   out_1453781278869036201[403] = 0;
   out_1453781278869036201[404] = 0;
   out_1453781278869036201[405] = 0;
   out_1453781278869036201[406] = 0;
   out_1453781278869036201[407] = 0;
   out_1453781278869036201[408] = 0;
   out_1453781278869036201[409] = 0;
   out_1453781278869036201[410] = 0;
   out_1453781278869036201[411] = 0;
   out_1453781278869036201[412] = 0;
   out_1453781278869036201[413] = 0;
   out_1453781278869036201[414] = 0;
   out_1453781278869036201[415] = 0;
   out_1453781278869036201[416] = 0;
   out_1453781278869036201[417] = 1.0;
   out_1453781278869036201[418] = 0;
   out_1453781278869036201[419] = 0;
   out_1453781278869036201[420] = 0;
   out_1453781278869036201[421] = 0;
   out_1453781278869036201[422] = 0;
   out_1453781278869036201[423] = 0;
   out_1453781278869036201[424] = 0;
   out_1453781278869036201[425] = 0;
   out_1453781278869036201[426] = 0;
   out_1453781278869036201[427] = 0;
   out_1453781278869036201[428] = 0;
   out_1453781278869036201[429] = 0;
   out_1453781278869036201[430] = 0;
   out_1453781278869036201[431] = 0;
   out_1453781278869036201[432] = 0;
   out_1453781278869036201[433] = 0;
   out_1453781278869036201[434] = 0;
   out_1453781278869036201[435] = 0;
   out_1453781278869036201[436] = 0;
   out_1453781278869036201[437] = 0;
   out_1453781278869036201[438] = 0;
   out_1453781278869036201[439] = 1.0;
   out_1453781278869036201[440] = 0;
   out_1453781278869036201[441] = 0;
   out_1453781278869036201[442] = 0;
   out_1453781278869036201[443] = 0;
   out_1453781278869036201[444] = 0;
   out_1453781278869036201[445] = 0;
   out_1453781278869036201[446] = 0;
   out_1453781278869036201[447] = 0;
   out_1453781278869036201[448] = 0;
   out_1453781278869036201[449] = 0;
   out_1453781278869036201[450] = 0;
   out_1453781278869036201[451] = 0;
   out_1453781278869036201[452] = 0;
   out_1453781278869036201[453] = 0;
   out_1453781278869036201[454] = 0;
   out_1453781278869036201[455] = 0;
   out_1453781278869036201[456] = 0;
   out_1453781278869036201[457] = 0;
   out_1453781278869036201[458] = 0;
   out_1453781278869036201[459] = 0;
   out_1453781278869036201[460] = 0;
   out_1453781278869036201[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_3751384202408520747) {
   out_3751384202408520747[0] = dt*state[7] + state[0];
   out_3751384202408520747[1] = dt*state[8] + state[1];
   out_3751384202408520747[2] = dt*state[9] + state[2];
   out_3751384202408520747[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_3751384202408520747[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_3751384202408520747[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_3751384202408520747[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_3751384202408520747[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_3751384202408520747[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_3751384202408520747[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_3751384202408520747[10] = state[10];
   out_3751384202408520747[11] = state[11];
   out_3751384202408520747[12] = state[12];
   out_3751384202408520747[13] = state[13];
   out_3751384202408520747[14] = state[14];
   out_3751384202408520747[15] = state[15];
   out_3751384202408520747[16] = state[16];
   out_3751384202408520747[17] = state[17];
   out_3751384202408520747[18] = state[18];
   out_3751384202408520747[19] = state[19];
   out_3751384202408520747[20] = state[20];
   out_3751384202408520747[21] = state[21];
}
void F_fun(double *state, double dt, double *out_5155198399062426300) {
   out_5155198399062426300[0] = 1;
   out_5155198399062426300[1] = 0;
   out_5155198399062426300[2] = 0;
   out_5155198399062426300[3] = 0;
   out_5155198399062426300[4] = 0;
   out_5155198399062426300[5] = 0;
   out_5155198399062426300[6] = dt;
   out_5155198399062426300[7] = 0;
   out_5155198399062426300[8] = 0;
   out_5155198399062426300[9] = 0;
   out_5155198399062426300[10] = 0;
   out_5155198399062426300[11] = 0;
   out_5155198399062426300[12] = 0;
   out_5155198399062426300[13] = 0;
   out_5155198399062426300[14] = 0;
   out_5155198399062426300[15] = 0;
   out_5155198399062426300[16] = 0;
   out_5155198399062426300[17] = 0;
   out_5155198399062426300[18] = 0;
   out_5155198399062426300[19] = 0;
   out_5155198399062426300[20] = 0;
   out_5155198399062426300[21] = 0;
   out_5155198399062426300[22] = 1;
   out_5155198399062426300[23] = 0;
   out_5155198399062426300[24] = 0;
   out_5155198399062426300[25] = 0;
   out_5155198399062426300[26] = 0;
   out_5155198399062426300[27] = 0;
   out_5155198399062426300[28] = dt;
   out_5155198399062426300[29] = 0;
   out_5155198399062426300[30] = 0;
   out_5155198399062426300[31] = 0;
   out_5155198399062426300[32] = 0;
   out_5155198399062426300[33] = 0;
   out_5155198399062426300[34] = 0;
   out_5155198399062426300[35] = 0;
   out_5155198399062426300[36] = 0;
   out_5155198399062426300[37] = 0;
   out_5155198399062426300[38] = 0;
   out_5155198399062426300[39] = 0;
   out_5155198399062426300[40] = 0;
   out_5155198399062426300[41] = 0;
   out_5155198399062426300[42] = 0;
   out_5155198399062426300[43] = 0;
   out_5155198399062426300[44] = 1;
   out_5155198399062426300[45] = 0;
   out_5155198399062426300[46] = 0;
   out_5155198399062426300[47] = 0;
   out_5155198399062426300[48] = 0;
   out_5155198399062426300[49] = 0;
   out_5155198399062426300[50] = dt;
   out_5155198399062426300[51] = 0;
   out_5155198399062426300[52] = 0;
   out_5155198399062426300[53] = 0;
   out_5155198399062426300[54] = 0;
   out_5155198399062426300[55] = 0;
   out_5155198399062426300[56] = 0;
   out_5155198399062426300[57] = 0;
   out_5155198399062426300[58] = 0;
   out_5155198399062426300[59] = 0;
   out_5155198399062426300[60] = 0;
   out_5155198399062426300[61] = 0;
   out_5155198399062426300[62] = 0;
   out_5155198399062426300[63] = 0;
   out_5155198399062426300[64] = 0;
   out_5155198399062426300[65] = 0;
   out_5155198399062426300[66] = 1;
   out_5155198399062426300[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_5155198399062426300[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_5155198399062426300[69] = 0;
   out_5155198399062426300[70] = 0;
   out_5155198399062426300[71] = 0;
   out_5155198399062426300[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5155198399062426300[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5155198399062426300[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5155198399062426300[75] = 0;
   out_5155198399062426300[76] = 0;
   out_5155198399062426300[77] = 0;
   out_5155198399062426300[78] = 0;
   out_5155198399062426300[79] = 0;
   out_5155198399062426300[80] = 0;
   out_5155198399062426300[81] = 0;
   out_5155198399062426300[82] = 0;
   out_5155198399062426300[83] = 0;
   out_5155198399062426300[84] = 0;
   out_5155198399062426300[85] = 0;
   out_5155198399062426300[86] = 0;
   out_5155198399062426300[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_5155198399062426300[88] = 1;
   out_5155198399062426300[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_5155198399062426300[90] = 0;
   out_5155198399062426300[91] = 0;
   out_5155198399062426300[92] = 0;
   out_5155198399062426300[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5155198399062426300[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5155198399062426300[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5155198399062426300[96] = 0;
   out_5155198399062426300[97] = 0;
   out_5155198399062426300[98] = 0;
   out_5155198399062426300[99] = 0;
   out_5155198399062426300[100] = 0;
   out_5155198399062426300[101] = 0;
   out_5155198399062426300[102] = 0;
   out_5155198399062426300[103] = 0;
   out_5155198399062426300[104] = 0;
   out_5155198399062426300[105] = 0;
   out_5155198399062426300[106] = 0;
   out_5155198399062426300[107] = 0;
   out_5155198399062426300[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_5155198399062426300[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_5155198399062426300[110] = 1;
   out_5155198399062426300[111] = 0;
   out_5155198399062426300[112] = 0;
   out_5155198399062426300[113] = 0;
   out_5155198399062426300[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5155198399062426300[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5155198399062426300[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5155198399062426300[117] = 0;
   out_5155198399062426300[118] = 0;
   out_5155198399062426300[119] = 0;
   out_5155198399062426300[120] = 0;
   out_5155198399062426300[121] = 0;
   out_5155198399062426300[122] = 0;
   out_5155198399062426300[123] = 0;
   out_5155198399062426300[124] = 0;
   out_5155198399062426300[125] = 0;
   out_5155198399062426300[126] = 0;
   out_5155198399062426300[127] = 0;
   out_5155198399062426300[128] = 0;
   out_5155198399062426300[129] = 0;
   out_5155198399062426300[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_5155198399062426300[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_5155198399062426300[132] = 1;
   out_5155198399062426300[133] = 0;
   out_5155198399062426300[134] = 0;
   out_5155198399062426300[135] = 0;
   out_5155198399062426300[136] = 0;
   out_5155198399062426300[137] = 0;
   out_5155198399062426300[138] = 0;
   out_5155198399062426300[139] = 0;
   out_5155198399062426300[140] = 0;
   out_5155198399062426300[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5155198399062426300[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5155198399062426300[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5155198399062426300[144] = 0;
   out_5155198399062426300[145] = 0;
   out_5155198399062426300[146] = 0;
   out_5155198399062426300[147] = 0;
   out_5155198399062426300[148] = 0;
   out_5155198399062426300[149] = 0;
   out_5155198399062426300[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_5155198399062426300[151] = 0;
   out_5155198399062426300[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_5155198399062426300[153] = 0;
   out_5155198399062426300[154] = 1;
   out_5155198399062426300[155] = 0;
   out_5155198399062426300[156] = 0;
   out_5155198399062426300[157] = 0;
   out_5155198399062426300[158] = 0;
   out_5155198399062426300[159] = 0;
   out_5155198399062426300[160] = 0;
   out_5155198399062426300[161] = 0;
   out_5155198399062426300[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5155198399062426300[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5155198399062426300[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5155198399062426300[165] = 0;
   out_5155198399062426300[166] = 0;
   out_5155198399062426300[167] = 0;
   out_5155198399062426300[168] = 0;
   out_5155198399062426300[169] = 0;
   out_5155198399062426300[170] = 0;
   out_5155198399062426300[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_5155198399062426300[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_5155198399062426300[173] = 0;
   out_5155198399062426300[174] = 0;
   out_5155198399062426300[175] = 0;
   out_5155198399062426300[176] = 1;
   out_5155198399062426300[177] = 0;
   out_5155198399062426300[178] = 0;
   out_5155198399062426300[179] = 0;
   out_5155198399062426300[180] = 0;
   out_5155198399062426300[181] = 0;
   out_5155198399062426300[182] = 0;
   out_5155198399062426300[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5155198399062426300[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5155198399062426300[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5155198399062426300[186] = 0;
   out_5155198399062426300[187] = 0;
   out_5155198399062426300[188] = 0;
   out_5155198399062426300[189] = 0;
   out_5155198399062426300[190] = 0;
   out_5155198399062426300[191] = 0;
   out_5155198399062426300[192] = 0;
   out_5155198399062426300[193] = 0;
   out_5155198399062426300[194] = 0;
   out_5155198399062426300[195] = 0;
   out_5155198399062426300[196] = 0;
   out_5155198399062426300[197] = 0;
   out_5155198399062426300[198] = 1;
   out_5155198399062426300[199] = 0;
   out_5155198399062426300[200] = 0;
   out_5155198399062426300[201] = 0;
   out_5155198399062426300[202] = 0;
   out_5155198399062426300[203] = 0;
   out_5155198399062426300[204] = 0;
   out_5155198399062426300[205] = 0;
   out_5155198399062426300[206] = 0;
   out_5155198399062426300[207] = 0;
   out_5155198399062426300[208] = 0;
   out_5155198399062426300[209] = 0;
   out_5155198399062426300[210] = 0;
   out_5155198399062426300[211] = 0;
   out_5155198399062426300[212] = 0;
   out_5155198399062426300[213] = 0;
   out_5155198399062426300[214] = 0;
   out_5155198399062426300[215] = 0;
   out_5155198399062426300[216] = 0;
   out_5155198399062426300[217] = 0;
   out_5155198399062426300[218] = 0;
   out_5155198399062426300[219] = 0;
   out_5155198399062426300[220] = 1;
   out_5155198399062426300[221] = 0;
   out_5155198399062426300[222] = 0;
   out_5155198399062426300[223] = 0;
   out_5155198399062426300[224] = 0;
   out_5155198399062426300[225] = 0;
   out_5155198399062426300[226] = 0;
   out_5155198399062426300[227] = 0;
   out_5155198399062426300[228] = 0;
   out_5155198399062426300[229] = 0;
   out_5155198399062426300[230] = 0;
   out_5155198399062426300[231] = 0;
   out_5155198399062426300[232] = 0;
   out_5155198399062426300[233] = 0;
   out_5155198399062426300[234] = 0;
   out_5155198399062426300[235] = 0;
   out_5155198399062426300[236] = 0;
   out_5155198399062426300[237] = 0;
   out_5155198399062426300[238] = 0;
   out_5155198399062426300[239] = 0;
   out_5155198399062426300[240] = 0;
   out_5155198399062426300[241] = 0;
   out_5155198399062426300[242] = 1;
   out_5155198399062426300[243] = 0;
   out_5155198399062426300[244] = 0;
   out_5155198399062426300[245] = 0;
   out_5155198399062426300[246] = 0;
   out_5155198399062426300[247] = 0;
   out_5155198399062426300[248] = 0;
   out_5155198399062426300[249] = 0;
   out_5155198399062426300[250] = 0;
   out_5155198399062426300[251] = 0;
   out_5155198399062426300[252] = 0;
   out_5155198399062426300[253] = 0;
   out_5155198399062426300[254] = 0;
   out_5155198399062426300[255] = 0;
   out_5155198399062426300[256] = 0;
   out_5155198399062426300[257] = 0;
   out_5155198399062426300[258] = 0;
   out_5155198399062426300[259] = 0;
   out_5155198399062426300[260] = 0;
   out_5155198399062426300[261] = 0;
   out_5155198399062426300[262] = 0;
   out_5155198399062426300[263] = 0;
   out_5155198399062426300[264] = 1;
   out_5155198399062426300[265] = 0;
   out_5155198399062426300[266] = 0;
   out_5155198399062426300[267] = 0;
   out_5155198399062426300[268] = 0;
   out_5155198399062426300[269] = 0;
   out_5155198399062426300[270] = 0;
   out_5155198399062426300[271] = 0;
   out_5155198399062426300[272] = 0;
   out_5155198399062426300[273] = 0;
   out_5155198399062426300[274] = 0;
   out_5155198399062426300[275] = 0;
   out_5155198399062426300[276] = 0;
   out_5155198399062426300[277] = 0;
   out_5155198399062426300[278] = 0;
   out_5155198399062426300[279] = 0;
   out_5155198399062426300[280] = 0;
   out_5155198399062426300[281] = 0;
   out_5155198399062426300[282] = 0;
   out_5155198399062426300[283] = 0;
   out_5155198399062426300[284] = 0;
   out_5155198399062426300[285] = 0;
   out_5155198399062426300[286] = 1;
   out_5155198399062426300[287] = 0;
   out_5155198399062426300[288] = 0;
   out_5155198399062426300[289] = 0;
   out_5155198399062426300[290] = 0;
   out_5155198399062426300[291] = 0;
   out_5155198399062426300[292] = 0;
   out_5155198399062426300[293] = 0;
   out_5155198399062426300[294] = 0;
   out_5155198399062426300[295] = 0;
   out_5155198399062426300[296] = 0;
   out_5155198399062426300[297] = 0;
   out_5155198399062426300[298] = 0;
   out_5155198399062426300[299] = 0;
   out_5155198399062426300[300] = 0;
   out_5155198399062426300[301] = 0;
   out_5155198399062426300[302] = 0;
   out_5155198399062426300[303] = 0;
   out_5155198399062426300[304] = 0;
   out_5155198399062426300[305] = 0;
   out_5155198399062426300[306] = 0;
   out_5155198399062426300[307] = 0;
   out_5155198399062426300[308] = 1;
   out_5155198399062426300[309] = 0;
   out_5155198399062426300[310] = 0;
   out_5155198399062426300[311] = 0;
   out_5155198399062426300[312] = 0;
   out_5155198399062426300[313] = 0;
   out_5155198399062426300[314] = 0;
   out_5155198399062426300[315] = 0;
   out_5155198399062426300[316] = 0;
   out_5155198399062426300[317] = 0;
   out_5155198399062426300[318] = 0;
   out_5155198399062426300[319] = 0;
   out_5155198399062426300[320] = 0;
   out_5155198399062426300[321] = 0;
   out_5155198399062426300[322] = 0;
   out_5155198399062426300[323] = 0;
   out_5155198399062426300[324] = 0;
   out_5155198399062426300[325] = 0;
   out_5155198399062426300[326] = 0;
   out_5155198399062426300[327] = 0;
   out_5155198399062426300[328] = 0;
   out_5155198399062426300[329] = 0;
   out_5155198399062426300[330] = 1;
   out_5155198399062426300[331] = 0;
   out_5155198399062426300[332] = 0;
   out_5155198399062426300[333] = 0;
   out_5155198399062426300[334] = 0;
   out_5155198399062426300[335] = 0;
   out_5155198399062426300[336] = 0;
   out_5155198399062426300[337] = 0;
   out_5155198399062426300[338] = 0;
   out_5155198399062426300[339] = 0;
   out_5155198399062426300[340] = 0;
   out_5155198399062426300[341] = 0;
   out_5155198399062426300[342] = 0;
   out_5155198399062426300[343] = 0;
   out_5155198399062426300[344] = 0;
   out_5155198399062426300[345] = 0;
   out_5155198399062426300[346] = 0;
   out_5155198399062426300[347] = 0;
   out_5155198399062426300[348] = 0;
   out_5155198399062426300[349] = 0;
   out_5155198399062426300[350] = 0;
   out_5155198399062426300[351] = 0;
   out_5155198399062426300[352] = 1;
   out_5155198399062426300[353] = 0;
   out_5155198399062426300[354] = 0;
   out_5155198399062426300[355] = 0;
   out_5155198399062426300[356] = 0;
   out_5155198399062426300[357] = 0;
   out_5155198399062426300[358] = 0;
   out_5155198399062426300[359] = 0;
   out_5155198399062426300[360] = 0;
   out_5155198399062426300[361] = 0;
   out_5155198399062426300[362] = 0;
   out_5155198399062426300[363] = 0;
   out_5155198399062426300[364] = 0;
   out_5155198399062426300[365] = 0;
   out_5155198399062426300[366] = 0;
   out_5155198399062426300[367] = 0;
   out_5155198399062426300[368] = 0;
   out_5155198399062426300[369] = 0;
   out_5155198399062426300[370] = 0;
   out_5155198399062426300[371] = 0;
   out_5155198399062426300[372] = 0;
   out_5155198399062426300[373] = 0;
   out_5155198399062426300[374] = 1;
   out_5155198399062426300[375] = 0;
   out_5155198399062426300[376] = 0;
   out_5155198399062426300[377] = 0;
   out_5155198399062426300[378] = 0;
   out_5155198399062426300[379] = 0;
   out_5155198399062426300[380] = 0;
   out_5155198399062426300[381] = 0;
   out_5155198399062426300[382] = 0;
   out_5155198399062426300[383] = 0;
   out_5155198399062426300[384] = 0;
   out_5155198399062426300[385] = 0;
   out_5155198399062426300[386] = 0;
   out_5155198399062426300[387] = 0;
   out_5155198399062426300[388] = 0;
   out_5155198399062426300[389] = 0;
   out_5155198399062426300[390] = 0;
   out_5155198399062426300[391] = 0;
   out_5155198399062426300[392] = 0;
   out_5155198399062426300[393] = 0;
   out_5155198399062426300[394] = 0;
   out_5155198399062426300[395] = 0;
   out_5155198399062426300[396] = 1;
   out_5155198399062426300[397] = 0;
   out_5155198399062426300[398] = 0;
   out_5155198399062426300[399] = 0;
   out_5155198399062426300[400] = 0;
   out_5155198399062426300[401] = 0;
   out_5155198399062426300[402] = 0;
   out_5155198399062426300[403] = 0;
   out_5155198399062426300[404] = 0;
   out_5155198399062426300[405] = 0;
   out_5155198399062426300[406] = 0;
   out_5155198399062426300[407] = 0;
   out_5155198399062426300[408] = 0;
   out_5155198399062426300[409] = 0;
   out_5155198399062426300[410] = 0;
   out_5155198399062426300[411] = 0;
   out_5155198399062426300[412] = 0;
   out_5155198399062426300[413] = 0;
   out_5155198399062426300[414] = 0;
   out_5155198399062426300[415] = 0;
   out_5155198399062426300[416] = 0;
   out_5155198399062426300[417] = 0;
   out_5155198399062426300[418] = 1;
   out_5155198399062426300[419] = 0;
   out_5155198399062426300[420] = 0;
   out_5155198399062426300[421] = 0;
   out_5155198399062426300[422] = 0;
   out_5155198399062426300[423] = 0;
   out_5155198399062426300[424] = 0;
   out_5155198399062426300[425] = 0;
   out_5155198399062426300[426] = 0;
   out_5155198399062426300[427] = 0;
   out_5155198399062426300[428] = 0;
   out_5155198399062426300[429] = 0;
   out_5155198399062426300[430] = 0;
   out_5155198399062426300[431] = 0;
   out_5155198399062426300[432] = 0;
   out_5155198399062426300[433] = 0;
   out_5155198399062426300[434] = 0;
   out_5155198399062426300[435] = 0;
   out_5155198399062426300[436] = 0;
   out_5155198399062426300[437] = 0;
   out_5155198399062426300[438] = 0;
   out_5155198399062426300[439] = 0;
   out_5155198399062426300[440] = 1;
}
void h_4(double *state, double *unused, double *out_5195838647191847946) {
   out_5195838647191847946[0] = state[10] + state[13];
   out_5195838647191847946[1] = state[11] + state[14];
   out_5195838647191847946[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_7955051523998970739) {
   out_7955051523998970739[0] = 0;
   out_7955051523998970739[1] = 0;
   out_7955051523998970739[2] = 0;
   out_7955051523998970739[3] = 0;
   out_7955051523998970739[4] = 0;
   out_7955051523998970739[5] = 0;
   out_7955051523998970739[6] = 0;
   out_7955051523998970739[7] = 0;
   out_7955051523998970739[8] = 0;
   out_7955051523998970739[9] = 0;
   out_7955051523998970739[10] = 1;
   out_7955051523998970739[11] = 0;
   out_7955051523998970739[12] = 0;
   out_7955051523998970739[13] = 1;
   out_7955051523998970739[14] = 0;
   out_7955051523998970739[15] = 0;
   out_7955051523998970739[16] = 0;
   out_7955051523998970739[17] = 0;
   out_7955051523998970739[18] = 0;
   out_7955051523998970739[19] = 0;
   out_7955051523998970739[20] = 0;
   out_7955051523998970739[21] = 0;
   out_7955051523998970739[22] = 0;
   out_7955051523998970739[23] = 0;
   out_7955051523998970739[24] = 0;
   out_7955051523998970739[25] = 0;
   out_7955051523998970739[26] = 0;
   out_7955051523998970739[27] = 0;
   out_7955051523998970739[28] = 0;
   out_7955051523998970739[29] = 0;
   out_7955051523998970739[30] = 0;
   out_7955051523998970739[31] = 0;
   out_7955051523998970739[32] = 0;
   out_7955051523998970739[33] = 1;
   out_7955051523998970739[34] = 0;
   out_7955051523998970739[35] = 0;
   out_7955051523998970739[36] = 1;
   out_7955051523998970739[37] = 0;
   out_7955051523998970739[38] = 0;
   out_7955051523998970739[39] = 0;
   out_7955051523998970739[40] = 0;
   out_7955051523998970739[41] = 0;
   out_7955051523998970739[42] = 0;
   out_7955051523998970739[43] = 0;
   out_7955051523998970739[44] = 0;
   out_7955051523998970739[45] = 0;
   out_7955051523998970739[46] = 0;
   out_7955051523998970739[47] = 0;
   out_7955051523998970739[48] = 0;
   out_7955051523998970739[49] = 0;
   out_7955051523998970739[50] = 0;
   out_7955051523998970739[51] = 0;
   out_7955051523998970739[52] = 0;
   out_7955051523998970739[53] = 0;
   out_7955051523998970739[54] = 0;
   out_7955051523998970739[55] = 0;
   out_7955051523998970739[56] = 1;
   out_7955051523998970739[57] = 0;
   out_7955051523998970739[58] = 0;
   out_7955051523998970739[59] = 1;
   out_7955051523998970739[60] = 0;
   out_7955051523998970739[61] = 0;
   out_7955051523998970739[62] = 0;
   out_7955051523998970739[63] = 0;
   out_7955051523998970739[64] = 0;
   out_7955051523998970739[65] = 0;
}
void h_9(double *state, double *unused, double *out_8458312080195228661) {
   out_8458312080195228661[0] = state[10];
   out_8458312080195228661[1] = state[11];
   out_8458312080195228661[2] = state[12];
}
void H_9(double *state, double *unused, double *out_7713861877369380094) {
   out_7713861877369380094[0] = 0;
   out_7713861877369380094[1] = 0;
   out_7713861877369380094[2] = 0;
   out_7713861877369380094[3] = 0;
   out_7713861877369380094[4] = 0;
   out_7713861877369380094[5] = 0;
   out_7713861877369380094[6] = 0;
   out_7713861877369380094[7] = 0;
   out_7713861877369380094[8] = 0;
   out_7713861877369380094[9] = 0;
   out_7713861877369380094[10] = 1;
   out_7713861877369380094[11] = 0;
   out_7713861877369380094[12] = 0;
   out_7713861877369380094[13] = 0;
   out_7713861877369380094[14] = 0;
   out_7713861877369380094[15] = 0;
   out_7713861877369380094[16] = 0;
   out_7713861877369380094[17] = 0;
   out_7713861877369380094[18] = 0;
   out_7713861877369380094[19] = 0;
   out_7713861877369380094[20] = 0;
   out_7713861877369380094[21] = 0;
   out_7713861877369380094[22] = 0;
   out_7713861877369380094[23] = 0;
   out_7713861877369380094[24] = 0;
   out_7713861877369380094[25] = 0;
   out_7713861877369380094[26] = 0;
   out_7713861877369380094[27] = 0;
   out_7713861877369380094[28] = 0;
   out_7713861877369380094[29] = 0;
   out_7713861877369380094[30] = 0;
   out_7713861877369380094[31] = 0;
   out_7713861877369380094[32] = 0;
   out_7713861877369380094[33] = 1;
   out_7713861877369380094[34] = 0;
   out_7713861877369380094[35] = 0;
   out_7713861877369380094[36] = 0;
   out_7713861877369380094[37] = 0;
   out_7713861877369380094[38] = 0;
   out_7713861877369380094[39] = 0;
   out_7713861877369380094[40] = 0;
   out_7713861877369380094[41] = 0;
   out_7713861877369380094[42] = 0;
   out_7713861877369380094[43] = 0;
   out_7713861877369380094[44] = 0;
   out_7713861877369380094[45] = 0;
   out_7713861877369380094[46] = 0;
   out_7713861877369380094[47] = 0;
   out_7713861877369380094[48] = 0;
   out_7713861877369380094[49] = 0;
   out_7713861877369380094[50] = 0;
   out_7713861877369380094[51] = 0;
   out_7713861877369380094[52] = 0;
   out_7713861877369380094[53] = 0;
   out_7713861877369380094[54] = 0;
   out_7713861877369380094[55] = 0;
   out_7713861877369380094[56] = 1;
   out_7713861877369380094[57] = 0;
   out_7713861877369380094[58] = 0;
   out_7713861877369380094[59] = 0;
   out_7713861877369380094[60] = 0;
   out_7713861877369380094[61] = 0;
   out_7713861877369380094[62] = 0;
   out_7713861877369380094[63] = 0;
   out_7713861877369380094[64] = 0;
   out_7713861877369380094[65] = 0;
}
void h_10(double *state, double *unused, double *out_237332352829652004) {
   out_237332352829652004[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_237332352829652004[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_237332352829652004[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_3612149683525720665) {
   out_3612149683525720665[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_3612149683525720665[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_3612149683525720665[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_3612149683525720665[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_3612149683525720665[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_3612149683525720665[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_3612149683525720665[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_3612149683525720665[7] = 0;
   out_3612149683525720665[8] = 0;
   out_3612149683525720665[9] = 0;
   out_3612149683525720665[10] = 0;
   out_3612149683525720665[11] = 0;
   out_3612149683525720665[12] = 0;
   out_3612149683525720665[13] = 0;
   out_3612149683525720665[14] = 0;
   out_3612149683525720665[15] = 0;
   out_3612149683525720665[16] = 1;
   out_3612149683525720665[17] = 0;
   out_3612149683525720665[18] = 0;
   out_3612149683525720665[19] = 1;
   out_3612149683525720665[20] = 0;
   out_3612149683525720665[21] = 0;
   out_3612149683525720665[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_3612149683525720665[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_3612149683525720665[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_3612149683525720665[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_3612149683525720665[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_3612149683525720665[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_3612149683525720665[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_3612149683525720665[29] = 0;
   out_3612149683525720665[30] = 0;
   out_3612149683525720665[31] = 0;
   out_3612149683525720665[32] = 0;
   out_3612149683525720665[33] = 0;
   out_3612149683525720665[34] = 0;
   out_3612149683525720665[35] = 0;
   out_3612149683525720665[36] = 0;
   out_3612149683525720665[37] = 0;
   out_3612149683525720665[38] = 0;
   out_3612149683525720665[39] = 1;
   out_3612149683525720665[40] = 0;
   out_3612149683525720665[41] = 0;
   out_3612149683525720665[42] = 1;
   out_3612149683525720665[43] = 0;
   out_3612149683525720665[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_3612149683525720665[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_3612149683525720665[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_3612149683525720665[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_3612149683525720665[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_3612149683525720665[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_3612149683525720665[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_3612149683525720665[51] = 0;
   out_3612149683525720665[52] = 0;
   out_3612149683525720665[53] = 0;
   out_3612149683525720665[54] = 0;
   out_3612149683525720665[55] = 0;
   out_3612149683525720665[56] = 0;
   out_3612149683525720665[57] = 0;
   out_3612149683525720665[58] = 0;
   out_3612149683525720665[59] = 0;
   out_3612149683525720665[60] = 0;
   out_3612149683525720665[61] = 0;
   out_3612149683525720665[62] = 1;
   out_3612149683525720665[63] = 0;
   out_3612149683525720665[64] = 0;
   out_3612149683525720665[65] = 1;
}
void h_12(double *state, double *unused, double *out_1947367096166371646) {
   out_1947367096166371646[0] = state[0];
   out_1947367096166371646[1] = state[1];
   out_1947367096166371646[2] = state[2];
}
void H_12(double *state, double *unused, double *out_2935595115967008944) {
   out_2935595115967008944[0] = 1;
   out_2935595115967008944[1] = 0;
   out_2935595115967008944[2] = 0;
   out_2935595115967008944[3] = 0;
   out_2935595115967008944[4] = 0;
   out_2935595115967008944[5] = 0;
   out_2935595115967008944[6] = 0;
   out_2935595115967008944[7] = 0;
   out_2935595115967008944[8] = 0;
   out_2935595115967008944[9] = 0;
   out_2935595115967008944[10] = 0;
   out_2935595115967008944[11] = 0;
   out_2935595115967008944[12] = 0;
   out_2935595115967008944[13] = 0;
   out_2935595115967008944[14] = 0;
   out_2935595115967008944[15] = 0;
   out_2935595115967008944[16] = 0;
   out_2935595115967008944[17] = 0;
   out_2935595115967008944[18] = 0;
   out_2935595115967008944[19] = 0;
   out_2935595115967008944[20] = 0;
   out_2935595115967008944[21] = 0;
   out_2935595115967008944[22] = 0;
   out_2935595115967008944[23] = 1;
   out_2935595115967008944[24] = 0;
   out_2935595115967008944[25] = 0;
   out_2935595115967008944[26] = 0;
   out_2935595115967008944[27] = 0;
   out_2935595115967008944[28] = 0;
   out_2935595115967008944[29] = 0;
   out_2935595115967008944[30] = 0;
   out_2935595115967008944[31] = 0;
   out_2935595115967008944[32] = 0;
   out_2935595115967008944[33] = 0;
   out_2935595115967008944[34] = 0;
   out_2935595115967008944[35] = 0;
   out_2935595115967008944[36] = 0;
   out_2935595115967008944[37] = 0;
   out_2935595115967008944[38] = 0;
   out_2935595115967008944[39] = 0;
   out_2935595115967008944[40] = 0;
   out_2935595115967008944[41] = 0;
   out_2935595115967008944[42] = 0;
   out_2935595115967008944[43] = 0;
   out_2935595115967008944[44] = 0;
   out_2935595115967008944[45] = 0;
   out_2935595115967008944[46] = 1;
   out_2935595115967008944[47] = 0;
   out_2935595115967008944[48] = 0;
   out_2935595115967008944[49] = 0;
   out_2935595115967008944[50] = 0;
   out_2935595115967008944[51] = 0;
   out_2935595115967008944[52] = 0;
   out_2935595115967008944[53] = 0;
   out_2935595115967008944[54] = 0;
   out_2935595115967008944[55] = 0;
   out_2935595115967008944[56] = 0;
   out_2935595115967008944[57] = 0;
   out_2935595115967008944[58] = 0;
   out_2935595115967008944[59] = 0;
   out_2935595115967008944[60] = 0;
   out_2935595115967008944[61] = 0;
   out_2935595115967008944[62] = 0;
   out_2935595115967008944[63] = 0;
   out_2935595115967008944[64] = 0;
   out_2935595115967008944[65] = 0;
}
void h_31(double *state, double *unused, double *out_1876180537666478243) {
   out_1876180537666478243[0] = state[7];
   out_1876180537666478243[1] = state[8];
   out_1876180537666478243[2] = state[9];
}
void H_31(double *state, double *unused, double *out_4588389466626363363) {
   out_4588389466626363363[0] = 0;
   out_4588389466626363363[1] = 0;
   out_4588389466626363363[2] = 0;
   out_4588389466626363363[3] = 0;
   out_4588389466626363363[4] = 0;
   out_4588389466626363363[5] = 0;
   out_4588389466626363363[6] = 0;
   out_4588389466626363363[7] = 1;
   out_4588389466626363363[8] = 0;
   out_4588389466626363363[9] = 0;
   out_4588389466626363363[10] = 0;
   out_4588389466626363363[11] = 0;
   out_4588389466626363363[12] = 0;
   out_4588389466626363363[13] = 0;
   out_4588389466626363363[14] = 0;
   out_4588389466626363363[15] = 0;
   out_4588389466626363363[16] = 0;
   out_4588389466626363363[17] = 0;
   out_4588389466626363363[18] = 0;
   out_4588389466626363363[19] = 0;
   out_4588389466626363363[20] = 0;
   out_4588389466626363363[21] = 0;
   out_4588389466626363363[22] = 0;
   out_4588389466626363363[23] = 0;
   out_4588389466626363363[24] = 0;
   out_4588389466626363363[25] = 0;
   out_4588389466626363363[26] = 0;
   out_4588389466626363363[27] = 0;
   out_4588389466626363363[28] = 0;
   out_4588389466626363363[29] = 0;
   out_4588389466626363363[30] = 1;
   out_4588389466626363363[31] = 0;
   out_4588389466626363363[32] = 0;
   out_4588389466626363363[33] = 0;
   out_4588389466626363363[34] = 0;
   out_4588389466626363363[35] = 0;
   out_4588389466626363363[36] = 0;
   out_4588389466626363363[37] = 0;
   out_4588389466626363363[38] = 0;
   out_4588389466626363363[39] = 0;
   out_4588389466626363363[40] = 0;
   out_4588389466626363363[41] = 0;
   out_4588389466626363363[42] = 0;
   out_4588389466626363363[43] = 0;
   out_4588389466626363363[44] = 0;
   out_4588389466626363363[45] = 0;
   out_4588389466626363363[46] = 0;
   out_4588389466626363363[47] = 0;
   out_4588389466626363363[48] = 0;
   out_4588389466626363363[49] = 0;
   out_4588389466626363363[50] = 0;
   out_4588389466626363363[51] = 0;
   out_4588389466626363363[52] = 0;
   out_4588389466626363363[53] = 1;
   out_4588389466626363363[54] = 0;
   out_4588389466626363363[55] = 0;
   out_4588389466626363363[56] = 0;
   out_4588389466626363363[57] = 0;
   out_4588389466626363363[58] = 0;
   out_4588389466626363363[59] = 0;
   out_4588389466626363363[60] = 0;
   out_4588389466626363363[61] = 0;
   out_4588389466626363363[62] = 0;
   out_4588389466626363363[63] = 0;
   out_4588389466626363363[64] = 0;
   out_4588389466626363363[65] = 0;
}
void h_32(double *state, double *unused, double *out_8866808176599821212) {
   out_8866808176599821212[0] = state[3];
   out_8866808176599821212[1] = state[4];
   out_8866808176599821212[2] = state[5];
   out_8866808176599821212[3] = state[6];
}
void H_32(double *state, double *unused, double *out_6943490103389071897) {
   out_6943490103389071897[0] = 0;
   out_6943490103389071897[1] = 0;
   out_6943490103389071897[2] = 0;
   out_6943490103389071897[3] = 1;
   out_6943490103389071897[4] = 0;
   out_6943490103389071897[5] = 0;
   out_6943490103389071897[6] = 0;
   out_6943490103389071897[7] = 0;
   out_6943490103389071897[8] = 0;
   out_6943490103389071897[9] = 0;
   out_6943490103389071897[10] = 0;
   out_6943490103389071897[11] = 0;
   out_6943490103389071897[12] = 0;
   out_6943490103389071897[13] = 0;
   out_6943490103389071897[14] = 0;
   out_6943490103389071897[15] = 0;
   out_6943490103389071897[16] = 0;
   out_6943490103389071897[17] = 0;
   out_6943490103389071897[18] = 0;
   out_6943490103389071897[19] = 0;
   out_6943490103389071897[20] = 0;
   out_6943490103389071897[21] = 0;
   out_6943490103389071897[22] = 0;
   out_6943490103389071897[23] = 0;
   out_6943490103389071897[24] = 0;
   out_6943490103389071897[25] = 0;
   out_6943490103389071897[26] = 1;
   out_6943490103389071897[27] = 0;
   out_6943490103389071897[28] = 0;
   out_6943490103389071897[29] = 0;
   out_6943490103389071897[30] = 0;
   out_6943490103389071897[31] = 0;
   out_6943490103389071897[32] = 0;
   out_6943490103389071897[33] = 0;
   out_6943490103389071897[34] = 0;
   out_6943490103389071897[35] = 0;
   out_6943490103389071897[36] = 0;
   out_6943490103389071897[37] = 0;
   out_6943490103389071897[38] = 0;
   out_6943490103389071897[39] = 0;
   out_6943490103389071897[40] = 0;
   out_6943490103389071897[41] = 0;
   out_6943490103389071897[42] = 0;
   out_6943490103389071897[43] = 0;
   out_6943490103389071897[44] = 0;
   out_6943490103389071897[45] = 0;
   out_6943490103389071897[46] = 0;
   out_6943490103389071897[47] = 0;
   out_6943490103389071897[48] = 0;
   out_6943490103389071897[49] = 1;
   out_6943490103389071897[50] = 0;
   out_6943490103389071897[51] = 0;
   out_6943490103389071897[52] = 0;
   out_6943490103389071897[53] = 0;
   out_6943490103389071897[54] = 0;
   out_6943490103389071897[55] = 0;
   out_6943490103389071897[56] = 0;
   out_6943490103389071897[57] = 0;
   out_6943490103389071897[58] = 0;
   out_6943490103389071897[59] = 0;
   out_6943490103389071897[60] = 0;
   out_6943490103389071897[61] = 0;
   out_6943490103389071897[62] = 0;
   out_6943490103389071897[63] = 0;
   out_6943490103389071897[64] = 0;
   out_6943490103389071897[65] = 0;
   out_6943490103389071897[66] = 0;
   out_6943490103389071897[67] = 0;
   out_6943490103389071897[68] = 0;
   out_6943490103389071897[69] = 0;
   out_6943490103389071897[70] = 0;
   out_6943490103389071897[71] = 0;
   out_6943490103389071897[72] = 1;
   out_6943490103389071897[73] = 0;
   out_6943490103389071897[74] = 0;
   out_6943490103389071897[75] = 0;
   out_6943490103389071897[76] = 0;
   out_6943490103389071897[77] = 0;
   out_6943490103389071897[78] = 0;
   out_6943490103389071897[79] = 0;
   out_6943490103389071897[80] = 0;
   out_6943490103389071897[81] = 0;
   out_6943490103389071897[82] = 0;
   out_6943490103389071897[83] = 0;
   out_6943490103389071897[84] = 0;
   out_6943490103389071897[85] = 0;
   out_6943490103389071897[86] = 0;
   out_6943490103389071897[87] = 0;
}
void h_13(double *state, double *unused, double *out_4441742876173568425) {
   out_4441742876173568425[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_4441742876173568425[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_4441742876173568425[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_796798030774768568) {
   out_796798030774768568[0] = 0;
   out_796798030774768568[1] = 0;
   out_796798030774768568[2] = 0;
   out_796798030774768568[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_796798030774768568[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_796798030774768568[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_796798030774768568[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_796798030774768568[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_796798030774768568[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_796798030774768568[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_796798030774768568[10] = 0;
   out_796798030774768568[11] = 0;
   out_796798030774768568[12] = 0;
   out_796798030774768568[13] = 0;
   out_796798030774768568[14] = 0;
   out_796798030774768568[15] = 0;
   out_796798030774768568[16] = 0;
   out_796798030774768568[17] = 0;
   out_796798030774768568[18] = 0;
   out_796798030774768568[19] = 0;
   out_796798030774768568[20] = 0;
   out_796798030774768568[21] = 0;
   out_796798030774768568[22] = 0;
   out_796798030774768568[23] = 0;
   out_796798030774768568[24] = 0;
   out_796798030774768568[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_796798030774768568[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_796798030774768568[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_796798030774768568[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_796798030774768568[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_796798030774768568[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_796798030774768568[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_796798030774768568[32] = 0;
   out_796798030774768568[33] = 0;
   out_796798030774768568[34] = 0;
   out_796798030774768568[35] = 0;
   out_796798030774768568[36] = 0;
   out_796798030774768568[37] = 0;
   out_796798030774768568[38] = 0;
   out_796798030774768568[39] = 0;
   out_796798030774768568[40] = 0;
   out_796798030774768568[41] = 0;
   out_796798030774768568[42] = 0;
   out_796798030774768568[43] = 0;
   out_796798030774768568[44] = 0;
   out_796798030774768568[45] = 0;
   out_796798030774768568[46] = 0;
   out_796798030774768568[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_796798030774768568[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_796798030774768568[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_796798030774768568[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_796798030774768568[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_796798030774768568[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_796798030774768568[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_796798030774768568[54] = 0;
   out_796798030774768568[55] = 0;
   out_796798030774768568[56] = 0;
   out_796798030774768568[57] = 0;
   out_796798030774768568[58] = 0;
   out_796798030774768568[59] = 0;
   out_796798030774768568[60] = 0;
   out_796798030774768568[61] = 0;
   out_796798030774768568[62] = 0;
   out_796798030774768568[63] = 0;
   out_796798030774768568[64] = 0;
   out_796798030774768568[65] = 0;
}
void h_14(double *state, double *unused, double *out_8458312080195228661) {
   out_8458312080195228661[0] = state[10];
   out_8458312080195228661[1] = state[11];
   out_8458312080195228661[2] = state[12];
}
void H_14(double *state, double *unused, double *out_7713861877369380094) {
   out_7713861877369380094[0] = 0;
   out_7713861877369380094[1] = 0;
   out_7713861877369380094[2] = 0;
   out_7713861877369380094[3] = 0;
   out_7713861877369380094[4] = 0;
   out_7713861877369380094[5] = 0;
   out_7713861877369380094[6] = 0;
   out_7713861877369380094[7] = 0;
   out_7713861877369380094[8] = 0;
   out_7713861877369380094[9] = 0;
   out_7713861877369380094[10] = 1;
   out_7713861877369380094[11] = 0;
   out_7713861877369380094[12] = 0;
   out_7713861877369380094[13] = 0;
   out_7713861877369380094[14] = 0;
   out_7713861877369380094[15] = 0;
   out_7713861877369380094[16] = 0;
   out_7713861877369380094[17] = 0;
   out_7713861877369380094[18] = 0;
   out_7713861877369380094[19] = 0;
   out_7713861877369380094[20] = 0;
   out_7713861877369380094[21] = 0;
   out_7713861877369380094[22] = 0;
   out_7713861877369380094[23] = 0;
   out_7713861877369380094[24] = 0;
   out_7713861877369380094[25] = 0;
   out_7713861877369380094[26] = 0;
   out_7713861877369380094[27] = 0;
   out_7713861877369380094[28] = 0;
   out_7713861877369380094[29] = 0;
   out_7713861877369380094[30] = 0;
   out_7713861877369380094[31] = 0;
   out_7713861877369380094[32] = 0;
   out_7713861877369380094[33] = 1;
   out_7713861877369380094[34] = 0;
   out_7713861877369380094[35] = 0;
   out_7713861877369380094[36] = 0;
   out_7713861877369380094[37] = 0;
   out_7713861877369380094[38] = 0;
   out_7713861877369380094[39] = 0;
   out_7713861877369380094[40] = 0;
   out_7713861877369380094[41] = 0;
   out_7713861877369380094[42] = 0;
   out_7713861877369380094[43] = 0;
   out_7713861877369380094[44] = 0;
   out_7713861877369380094[45] = 0;
   out_7713861877369380094[46] = 0;
   out_7713861877369380094[47] = 0;
   out_7713861877369380094[48] = 0;
   out_7713861877369380094[49] = 0;
   out_7713861877369380094[50] = 0;
   out_7713861877369380094[51] = 0;
   out_7713861877369380094[52] = 0;
   out_7713861877369380094[53] = 0;
   out_7713861877369380094[54] = 0;
   out_7713861877369380094[55] = 0;
   out_7713861877369380094[56] = 1;
   out_7713861877369380094[57] = 0;
   out_7713861877369380094[58] = 0;
   out_7713861877369380094[59] = 0;
   out_7713861877369380094[60] = 0;
   out_7713861877369380094[61] = 0;
   out_7713861877369380094[62] = 0;
   out_7713861877369380094[63] = 0;
   out_7713861877369380094[64] = 0;
   out_7713861877369380094[65] = 0;
}
void h_33(double *state, double *unused, double *out_2655887984277546659) {
   out_2655887984277546659[0] = state[16];
   out_2655887984277546659[1] = state[17];
   out_2655887984277546659[2] = state[18];
}
void H_33(double *state, double *unused, double *out_1437832461987505759) {
   out_1437832461987505759[0] = 0;
   out_1437832461987505759[1] = 0;
   out_1437832461987505759[2] = 0;
   out_1437832461987505759[3] = 0;
   out_1437832461987505759[4] = 0;
   out_1437832461987505759[5] = 0;
   out_1437832461987505759[6] = 0;
   out_1437832461987505759[7] = 0;
   out_1437832461987505759[8] = 0;
   out_1437832461987505759[9] = 0;
   out_1437832461987505759[10] = 0;
   out_1437832461987505759[11] = 0;
   out_1437832461987505759[12] = 0;
   out_1437832461987505759[13] = 0;
   out_1437832461987505759[14] = 0;
   out_1437832461987505759[15] = 0;
   out_1437832461987505759[16] = 1;
   out_1437832461987505759[17] = 0;
   out_1437832461987505759[18] = 0;
   out_1437832461987505759[19] = 0;
   out_1437832461987505759[20] = 0;
   out_1437832461987505759[21] = 0;
   out_1437832461987505759[22] = 0;
   out_1437832461987505759[23] = 0;
   out_1437832461987505759[24] = 0;
   out_1437832461987505759[25] = 0;
   out_1437832461987505759[26] = 0;
   out_1437832461987505759[27] = 0;
   out_1437832461987505759[28] = 0;
   out_1437832461987505759[29] = 0;
   out_1437832461987505759[30] = 0;
   out_1437832461987505759[31] = 0;
   out_1437832461987505759[32] = 0;
   out_1437832461987505759[33] = 0;
   out_1437832461987505759[34] = 0;
   out_1437832461987505759[35] = 0;
   out_1437832461987505759[36] = 0;
   out_1437832461987505759[37] = 0;
   out_1437832461987505759[38] = 0;
   out_1437832461987505759[39] = 1;
   out_1437832461987505759[40] = 0;
   out_1437832461987505759[41] = 0;
   out_1437832461987505759[42] = 0;
   out_1437832461987505759[43] = 0;
   out_1437832461987505759[44] = 0;
   out_1437832461987505759[45] = 0;
   out_1437832461987505759[46] = 0;
   out_1437832461987505759[47] = 0;
   out_1437832461987505759[48] = 0;
   out_1437832461987505759[49] = 0;
   out_1437832461987505759[50] = 0;
   out_1437832461987505759[51] = 0;
   out_1437832461987505759[52] = 0;
   out_1437832461987505759[53] = 0;
   out_1437832461987505759[54] = 0;
   out_1437832461987505759[55] = 0;
   out_1437832461987505759[56] = 0;
   out_1437832461987505759[57] = 0;
   out_1437832461987505759[58] = 0;
   out_1437832461987505759[59] = 0;
   out_1437832461987505759[60] = 0;
   out_1437832461987505759[61] = 0;
   out_1437832461987505759[62] = 1;
   out_1437832461987505759[63] = 0;
   out_1437832461987505759[64] = 0;
   out_1437832461987505759[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_31(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_31, H_31, NULL, in_z, in_R, in_ea, MAHA_THRESH_31);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_360501912147953484) {
  H(in_vec, out_360501912147953484);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_3740584223096575636) {
  err_fun(nom_x, delta_x, out_3740584223096575636);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_5064167050965321181) {
  inv_err_fun(nom_x, true_x, out_5064167050965321181);
}
void live_H_mod_fun(double *state, double *out_1453781278869036201) {
  H_mod_fun(state, out_1453781278869036201);
}
void live_f_fun(double *state, double dt, double *out_3751384202408520747) {
  f_fun(state,  dt, out_3751384202408520747);
}
void live_F_fun(double *state, double dt, double *out_5155198399062426300) {
  F_fun(state,  dt, out_5155198399062426300);
}
void live_h_4(double *state, double *unused, double *out_5195838647191847946) {
  h_4(state, unused, out_5195838647191847946);
}
void live_H_4(double *state, double *unused, double *out_7955051523998970739) {
  H_4(state, unused, out_7955051523998970739);
}
void live_h_9(double *state, double *unused, double *out_8458312080195228661) {
  h_9(state, unused, out_8458312080195228661);
}
void live_H_9(double *state, double *unused, double *out_7713861877369380094) {
  H_9(state, unused, out_7713861877369380094);
}
void live_h_10(double *state, double *unused, double *out_237332352829652004) {
  h_10(state, unused, out_237332352829652004);
}
void live_H_10(double *state, double *unused, double *out_3612149683525720665) {
  H_10(state, unused, out_3612149683525720665);
}
void live_h_12(double *state, double *unused, double *out_1947367096166371646) {
  h_12(state, unused, out_1947367096166371646);
}
void live_H_12(double *state, double *unused, double *out_2935595115967008944) {
  H_12(state, unused, out_2935595115967008944);
}
void live_h_31(double *state, double *unused, double *out_1876180537666478243) {
  h_31(state, unused, out_1876180537666478243);
}
void live_H_31(double *state, double *unused, double *out_4588389466626363363) {
  H_31(state, unused, out_4588389466626363363);
}
void live_h_32(double *state, double *unused, double *out_8866808176599821212) {
  h_32(state, unused, out_8866808176599821212);
}
void live_H_32(double *state, double *unused, double *out_6943490103389071897) {
  H_32(state, unused, out_6943490103389071897);
}
void live_h_13(double *state, double *unused, double *out_4441742876173568425) {
  h_13(state, unused, out_4441742876173568425);
}
void live_H_13(double *state, double *unused, double *out_796798030774768568) {
  H_13(state, unused, out_796798030774768568);
}
void live_h_14(double *state, double *unused, double *out_8458312080195228661) {
  h_14(state, unused, out_8458312080195228661);
}
void live_H_14(double *state, double *unused, double *out_7713861877369380094) {
  H_14(state, unused, out_7713861877369380094);
}
void live_h_33(double *state, double *unused, double *out_2655887984277546659) {
  h_33(state, unused, out_2655887984277546659);
}
void live_H_33(double *state, double *unused, double *out_1437832461987505759) {
  H_33(state, unused, out_1437832461987505759);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 31, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 31, live_h_31 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 31, live_H_31 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 31, live_update_31 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
