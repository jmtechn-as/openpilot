#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_31 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with sympy 1.9                        *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_2503166590185590312) {
   out_2503166590185590312[0] = 0;
   out_2503166590185590312[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_2503166590185590312[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_2503166590185590312[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_2503166590185590312[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_2503166590185590312[5] = -sin(in_vec[1]);
   out_2503166590185590312[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_2503166590185590312[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_2503166590185590312[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_2503166590185590312[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_2503166590185590312[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_2503166590185590312[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_2503166590185590312[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_2503166590185590312[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_2503166590185590312[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_2503166590185590312[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_2503166590185590312[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_2503166590185590312[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_3794793126910250149) {
   out_3794793126910250149[0] = delta_x[0] + nom_x[0];
   out_3794793126910250149[1] = delta_x[1] + nom_x[1];
   out_3794793126910250149[2] = delta_x[2] + nom_x[2];
   out_3794793126910250149[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_3794793126910250149[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_3794793126910250149[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_3794793126910250149[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_3794793126910250149[7] = delta_x[6] + nom_x[7];
   out_3794793126910250149[8] = delta_x[7] + nom_x[8];
   out_3794793126910250149[9] = delta_x[8] + nom_x[9];
   out_3794793126910250149[10] = delta_x[9] + nom_x[10];
   out_3794793126910250149[11] = delta_x[10] + nom_x[11];
   out_3794793126910250149[12] = delta_x[11] + nom_x[12];
   out_3794793126910250149[13] = delta_x[12] + nom_x[13];
   out_3794793126910250149[14] = delta_x[13] + nom_x[14];
   out_3794793126910250149[15] = delta_x[14] + nom_x[15];
   out_3794793126910250149[16] = delta_x[15] + nom_x[16];
   out_3794793126910250149[17] = delta_x[16] + nom_x[17];
   out_3794793126910250149[18] = delta_x[17] + nom_x[18];
   out_3794793126910250149[19] = delta_x[18] + nom_x[19];
   out_3794793126910250149[20] = delta_x[19] + nom_x[20];
   out_3794793126910250149[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_5930455572415847170) {
   out_5930455572415847170[0] = -nom_x[0] + true_x[0];
   out_5930455572415847170[1] = -nom_x[1] + true_x[1];
   out_5930455572415847170[2] = -nom_x[2] + true_x[2];
   out_5930455572415847170[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_5930455572415847170[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_5930455572415847170[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_5930455572415847170[6] = -nom_x[7] + true_x[7];
   out_5930455572415847170[7] = -nom_x[8] + true_x[8];
   out_5930455572415847170[8] = -nom_x[9] + true_x[9];
   out_5930455572415847170[9] = -nom_x[10] + true_x[10];
   out_5930455572415847170[10] = -nom_x[11] + true_x[11];
   out_5930455572415847170[11] = -nom_x[12] + true_x[12];
   out_5930455572415847170[12] = -nom_x[13] + true_x[13];
   out_5930455572415847170[13] = -nom_x[14] + true_x[14];
   out_5930455572415847170[14] = -nom_x[15] + true_x[15];
   out_5930455572415847170[15] = -nom_x[16] + true_x[16];
   out_5930455572415847170[16] = -nom_x[17] + true_x[17];
   out_5930455572415847170[17] = -nom_x[18] + true_x[18];
   out_5930455572415847170[18] = -nom_x[19] + true_x[19];
   out_5930455572415847170[19] = -nom_x[20] + true_x[20];
   out_5930455572415847170[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_9124384806770571381) {
   out_9124384806770571381[0] = 1.0;
   out_9124384806770571381[1] = 0;
   out_9124384806770571381[2] = 0;
   out_9124384806770571381[3] = 0;
   out_9124384806770571381[4] = 0;
   out_9124384806770571381[5] = 0;
   out_9124384806770571381[6] = 0;
   out_9124384806770571381[7] = 0;
   out_9124384806770571381[8] = 0;
   out_9124384806770571381[9] = 0;
   out_9124384806770571381[10] = 0;
   out_9124384806770571381[11] = 0;
   out_9124384806770571381[12] = 0;
   out_9124384806770571381[13] = 0;
   out_9124384806770571381[14] = 0;
   out_9124384806770571381[15] = 0;
   out_9124384806770571381[16] = 0;
   out_9124384806770571381[17] = 0;
   out_9124384806770571381[18] = 0;
   out_9124384806770571381[19] = 0;
   out_9124384806770571381[20] = 0;
   out_9124384806770571381[21] = 0;
   out_9124384806770571381[22] = 1.0;
   out_9124384806770571381[23] = 0;
   out_9124384806770571381[24] = 0;
   out_9124384806770571381[25] = 0;
   out_9124384806770571381[26] = 0;
   out_9124384806770571381[27] = 0;
   out_9124384806770571381[28] = 0;
   out_9124384806770571381[29] = 0;
   out_9124384806770571381[30] = 0;
   out_9124384806770571381[31] = 0;
   out_9124384806770571381[32] = 0;
   out_9124384806770571381[33] = 0;
   out_9124384806770571381[34] = 0;
   out_9124384806770571381[35] = 0;
   out_9124384806770571381[36] = 0;
   out_9124384806770571381[37] = 0;
   out_9124384806770571381[38] = 0;
   out_9124384806770571381[39] = 0;
   out_9124384806770571381[40] = 0;
   out_9124384806770571381[41] = 0;
   out_9124384806770571381[42] = 0;
   out_9124384806770571381[43] = 0;
   out_9124384806770571381[44] = 1.0;
   out_9124384806770571381[45] = 0;
   out_9124384806770571381[46] = 0;
   out_9124384806770571381[47] = 0;
   out_9124384806770571381[48] = 0;
   out_9124384806770571381[49] = 0;
   out_9124384806770571381[50] = 0;
   out_9124384806770571381[51] = 0;
   out_9124384806770571381[52] = 0;
   out_9124384806770571381[53] = 0;
   out_9124384806770571381[54] = 0;
   out_9124384806770571381[55] = 0;
   out_9124384806770571381[56] = 0;
   out_9124384806770571381[57] = 0;
   out_9124384806770571381[58] = 0;
   out_9124384806770571381[59] = 0;
   out_9124384806770571381[60] = 0;
   out_9124384806770571381[61] = 0;
   out_9124384806770571381[62] = 0;
   out_9124384806770571381[63] = 0;
   out_9124384806770571381[64] = 0;
   out_9124384806770571381[65] = 0;
   out_9124384806770571381[66] = -0.5*state[4];
   out_9124384806770571381[67] = -0.5*state[5];
   out_9124384806770571381[68] = -0.5*state[6];
   out_9124384806770571381[69] = 0;
   out_9124384806770571381[70] = 0;
   out_9124384806770571381[71] = 0;
   out_9124384806770571381[72] = 0;
   out_9124384806770571381[73] = 0;
   out_9124384806770571381[74] = 0;
   out_9124384806770571381[75] = 0;
   out_9124384806770571381[76] = 0;
   out_9124384806770571381[77] = 0;
   out_9124384806770571381[78] = 0;
   out_9124384806770571381[79] = 0;
   out_9124384806770571381[80] = 0;
   out_9124384806770571381[81] = 0;
   out_9124384806770571381[82] = 0;
   out_9124384806770571381[83] = 0;
   out_9124384806770571381[84] = 0;
   out_9124384806770571381[85] = 0;
   out_9124384806770571381[86] = 0;
   out_9124384806770571381[87] = 0.5*state[3];
   out_9124384806770571381[88] = 0.5*state[6];
   out_9124384806770571381[89] = -0.5*state[5];
   out_9124384806770571381[90] = 0;
   out_9124384806770571381[91] = 0;
   out_9124384806770571381[92] = 0;
   out_9124384806770571381[93] = 0;
   out_9124384806770571381[94] = 0;
   out_9124384806770571381[95] = 0;
   out_9124384806770571381[96] = 0;
   out_9124384806770571381[97] = 0;
   out_9124384806770571381[98] = 0;
   out_9124384806770571381[99] = 0;
   out_9124384806770571381[100] = 0;
   out_9124384806770571381[101] = 0;
   out_9124384806770571381[102] = 0;
   out_9124384806770571381[103] = 0;
   out_9124384806770571381[104] = 0;
   out_9124384806770571381[105] = 0;
   out_9124384806770571381[106] = 0;
   out_9124384806770571381[107] = 0;
   out_9124384806770571381[108] = -0.5*state[6];
   out_9124384806770571381[109] = 0.5*state[3];
   out_9124384806770571381[110] = 0.5*state[4];
   out_9124384806770571381[111] = 0;
   out_9124384806770571381[112] = 0;
   out_9124384806770571381[113] = 0;
   out_9124384806770571381[114] = 0;
   out_9124384806770571381[115] = 0;
   out_9124384806770571381[116] = 0;
   out_9124384806770571381[117] = 0;
   out_9124384806770571381[118] = 0;
   out_9124384806770571381[119] = 0;
   out_9124384806770571381[120] = 0;
   out_9124384806770571381[121] = 0;
   out_9124384806770571381[122] = 0;
   out_9124384806770571381[123] = 0;
   out_9124384806770571381[124] = 0;
   out_9124384806770571381[125] = 0;
   out_9124384806770571381[126] = 0;
   out_9124384806770571381[127] = 0;
   out_9124384806770571381[128] = 0;
   out_9124384806770571381[129] = 0.5*state[5];
   out_9124384806770571381[130] = -0.5*state[4];
   out_9124384806770571381[131] = 0.5*state[3];
   out_9124384806770571381[132] = 0;
   out_9124384806770571381[133] = 0;
   out_9124384806770571381[134] = 0;
   out_9124384806770571381[135] = 0;
   out_9124384806770571381[136] = 0;
   out_9124384806770571381[137] = 0;
   out_9124384806770571381[138] = 0;
   out_9124384806770571381[139] = 0;
   out_9124384806770571381[140] = 0;
   out_9124384806770571381[141] = 0;
   out_9124384806770571381[142] = 0;
   out_9124384806770571381[143] = 0;
   out_9124384806770571381[144] = 0;
   out_9124384806770571381[145] = 0;
   out_9124384806770571381[146] = 0;
   out_9124384806770571381[147] = 0;
   out_9124384806770571381[148] = 0;
   out_9124384806770571381[149] = 0;
   out_9124384806770571381[150] = 0;
   out_9124384806770571381[151] = 0;
   out_9124384806770571381[152] = 0;
   out_9124384806770571381[153] = 1.0;
   out_9124384806770571381[154] = 0;
   out_9124384806770571381[155] = 0;
   out_9124384806770571381[156] = 0;
   out_9124384806770571381[157] = 0;
   out_9124384806770571381[158] = 0;
   out_9124384806770571381[159] = 0;
   out_9124384806770571381[160] = 0;
   out_9124384806770571381[161] = 0;
   out_9124384806770571381[162] = 0;
   out_9124384806770571381[163] = 0;
   out_9124384806770571381[164] = 0;
   out_9124384806770571381[165] = 0;
   out_9124384806770571381[166] = 0;
   out_9124384806770571381[167] = 0;
   out_9124384806770571381[168] = 0;
   out_9124384806770571381[169] = 0;
   out_9124384806770571381[170] = 0;
   out_9124384806770571381[171] = 0;
   out_9124384806770571381[172] = 0;
   out_9124384806770571381[173] = 0;
   out_9124384806770571381[174] = 0;
   out_9124384806770571381[175] = 1.0;
   out_9124384806770571381[176] = 0;
   out_9124384806770571381[177] = 0;
   out_9124384806770571381[178] = 0;
   out_9124384806770571381[179] = 0;
   out_9124384806770571381[180] = 0;
   out_9124384806770571381[181] = 0;
   out_9124384806770571381[182] = 0;
   out_9124384806770571381[183] = 0;
   out_9124384806770571381[184] = 0;
   out_9124384806770571381[185] = 0;
   out_9124384806770571381[186] = 0;
   out_9124384806770571381[187] = 0;
   out_9124384806770571381[188] = 0;
   out_9124384806770571381[189] = 0;
   out_9124384806770571381[190] = 0;
   out_9124384806770571381[191] = 0;
   out_9124384806770571381[192] = 0;
   out_9124384806770571381[193] = 0;
   out_9124384806770571381[194] = 0;
   out_9124384806770571381[195] = 0;
   out_9124384806770571381[196] = 0;
   out_9124384806770571381[197] = 1.0;
   out_9124384806770571381[198] = 0;
   out_9124384806770571381[199] = 0;
   out_9124384806770571381[200] = 0;
   out_9124384806770571381[201] = 0;
   out_9124384806770571381[202] = 0;
   out_9124384806770571381[203] = 0;
   out_9124384806770571381[204] = 0;
   out_9124384806770571381[205] = 0;
   out_9124384806770571381[206] = 0;
   out_9124384806770571381[207] = 0;
   out_9124384806770571381[208] = 0;
   out_9124384806770571381[209] = 0;
   out_9124384806770571381[210] = 0;
   out_9124384806770571381[211] = 0;
   out_9124384806770571381[212] = 0;
   out_9124384806770571381[213] = 0;
   out_9124384806770571381[214] = 0;
   out_9124384806770571381[215] = 0;
   out_9124384806770571381[216] = 0;
   out_9124384806770571381[217] = 0;
   out_9124384806770571381[218] = 0;
   out_9124384806770571381[219] = 1.0;
   out_9124384806770571381[220] = 0;
   out_9124384806770571381[221] = 0;
   out_9124384806770571381[222] = 0;
   out_9124384806770571381[223] = 0;
   out_9124384806770571381[224] = 0;
   out_9124384806770571381[225] = 0;
   out_9124384806770571381[226] = 0;
   out_9124384806770571381[227] = 0;
   out_9124384806770571381[228] = 0;
   out_9124384806770571381[229] = 0;
   out_9124384806770571381[230] = 0;
   out_9124384806770571381[231] = 0;
   out_9124384806770571381[232] = 0;
   out_9124384806770571381[233] = 0;
   out_9124384806770571381[234] = 0;
   out_9124384806770571381[235] = 0;
   out_9124384806770571381[236] = 0;
   out_9124384806770571381[237] = 0;
   out_9124384806770571381[238] = 0;
   out_9124384806770571381[239] = 0;
   out_9124384806770571381[240] = 0;
   out_9124384806770571381[241] = 1.0;
   out_9124384806770571381[242] = 0;
   out_9124384806770571381[243] = 0;
   out_9124384806770571381[244] = 0;
   out_9124384806770571381[245] = 0;
   out_9124384806770571381[246] = 0;
   out_9124384806770571381[247] = 0;
   out_9124384806770571381[248] = 0;
   out_9124384806770571381[249] = 0;
   out_9124384806770571381[250] = 0;
   out_9124384806770571381[251] = 0;
   out_9124384806770571381[252] = 0;
   out_9124384806770571381[253] = 0;
   out_9124384806770571381[254] = 0;
   out_9124384806770571381[255] = 0;
   out_9124384806770571381[256] = 0;
   out_9124384806770571381[257] = 0;
   out_9124384806770571381[258] = 0;
   out_9124384806770571381[259] = 0;
   out_9124384806770571381[260] = 0;
   out_9124384806770571381[261] = 0;
   out_9124384806770571381[262] = 0;
   out_9124384806770571381[263] = 1.0;
   out_9124384806770571381[264] = 0;
   out_9124384806770571381[265] = 0;
   out_9124384806770571381[266] = 0;
   out_9124384806770571381[267] = 0;
   out_9124384806770571381[268] = 0;
   out_9124384806770571381[269] = 0;
   out_9124384806770571381[270] = 0;
   out_9124384806770571381[271] = 0;
   out_9124384806770571381[272] = 0;
   out_9124384806770571381[273] = 0;
   out_9124384806770571381[274] = 0;
   out_9124384806770571381[275] = 0;
   out_9124384806770571381[276] = 0;
   out_9124384806770571381[277] = 0;
   out_9124384806770571381[278] = 0;
   out_9124384806770571381[279] = 0;
   out_9124384806770571381[280] = 0;
   out_9124384806770571381[281] = 0;
   out_9124384806770571381[282] = 0;
   out_9124384806770571381[283] = 0;
   out_9124384806770571381[284] = 0;
   out_9124384806770571381[285] = 1.0;
   out_9124384806770571381[286] = 0;
   out_9124384806770571381[287] = 0;
   out_9124384806770571381[288] = 0;
   out_9124384806770571381[289] = 0;
   out_9124384806770571381[290] = 0;
   out_9124384806770571381[291] = 0;
   out_9124384806770571381[292] = 0;
   out_9124384806770571381[293] = 0;
   out_9124384806770571381[294] = 0;
   out_9124384806770571381[295] = 0;
   out_9124384806770571381[296] = 0;
   out_9124384806770571381[297] = 0;
   out_9124384806770571381[298] = 0;
   out_9124384806770571381[299] = 0;
   out_9124384806770571381[300] = 0;
   out_9124384806770571381[301] = 0;
   out_9124384806770571381[302] = 0;
   out_9124384806770571381[303] = 0;
   out_9124384806770571381[304] = 0;
   out_9124384806770571381[305] = 0;
   out_9124384806770571381[306] = 0;
   out_9124384806770571381[307] = 1.0;
   out_9124384806770571381[308] = 0;
   out_9124384806770571381[309] = 0;
   out_9124384806770571381[310] = 0;
   out_9124384806770571381[311] = 0;
   out_9124384806770571381[312] = 0;
   out_9124384806770571381[313] = 0;
   out_9124384806770571381[314] = 0;
   out_9124384806770571381[315] = 0;
   out_9124384806770571381[316] = 0;
   out_9124384806770571381[317] = 0;
   out_9124384806770571381[318] = 0;
   out_9124384806770571381[319] = 0;
   out_9124384806770571381[320] = 0;
   out_9124384806770571381[321] = 0;
   out_9124384806770571381[322] = 0;
   out_9124384806770571381[323] = 0;
   out_9124384806770571381[324] = 0;
   out_9124384806770571381[325] = 0;
   out_9124384806770571381[326] = 0;
   out_9124384806770571381[327] = 0;
   out_9124384806770571381[328] = 0;
   out_9124384806770571381[329] = 1.0;
   out_9124384806770571381[330] = 0;
   out_9124384806770571381[331] = 0;
   out_9124384806770571381[332] = 0;
   out_9124384806770571381[333] = 0;
   out_9124384806770571381[334] = 0;
   out_9124384806770571381[335] = 0;
   out_9124384806770571381[336] = 0;
   out_9124384806770571381[337] = 0;
   out_9124384806770571381[338] = 0;
   out_9124384806770571381[339] = 0;
   out_9124384806770571381[340] = 0;
   out_9124384806770571381[341] = 0;
   out_9124384806770571381[342] = 0;
   out_9124384806770571381[343] = 0;
   out_9124384806770571381[344] = 0;
   out_9124384806770571381[345] = 0;
   out_9124384806770571381[346] = 0;
   out_9124384806770571381[347] = 0;
   out_9124384806770571381[348] = 0;
   out_9124384806770571381[349] = 0;
   out_9124384806770571381[350] = 0;
   out_9124384806770571381[351] = 1.0;
   out_9124384806770571381[352] = 0;
   out_9124384806770571381[353] = 0;
   out_9124384806770571381[354] = 0;
   out_9124384806770571381[355] = 0;
   out_9124384806770571381[356] = 0;
   out_9124384806770571381[357] = 0;
   out_9124384806770571381[358] = 0;
   out_9124384806770571381[359] = 0;
   out_9124384806770571381[360] = 0;
   out_9124384806770571381[361] = 0;
   out_9124384806770571381[362] = 0;
   out_9124384806770571381[363] = 0;
   out_9124384806770571381[364] = 0;
   out_9124384806770571381[365] = 0;
   out_9124384806770571381[366] = 0;
   out_9124384806770571381[367] = 0;
   out_9124384806770571381[368] = 0;
   out_9124384806770571381[369] = 0;
   out_9124384806770571381[370] = 0;
   out_9124384806770571381[371] = 0;
   out_9124384806770571381[372] = 0;
   out_9124384806770571381[373] = 1.0;
   out_9124384806770571381[374] = 0;
   out_9124384806770571381[375] = 0;
   out_9124384806770571381[376] = 0;
   out_9124384806770571381[377] = 0;
   out_9124384806770571381[378] = 0;
   out_9124384806770571381[379] = 0;
   out_9124384806770571381[380] = 0;
   out_9124384806770571381[381] = 0;
   out_9124384806770571381[382] = 0;
   out_9124384806770571381[383] = 0;
   out_9124384806770571381[384] = 0;
   out_9124384806770571381[385] = 0;
   out_9124384806770571381[386] = 0;
   out_9124384806770571381[387] = 0;
   out_9124384806770571381[388] = 0;
   out_9124384806770571381[389] = 0;
   out_9124384806770571381[390] = 0;
   out_9124384806770571381[391] = 0;
   out_9124384806770571381[392] = 0;
   out_9124384806770571381[393] = 0;
   out_9124384806770571381[394] = 0;
   out_9124384806770571381[395] = 1.0;
   out_9124384806770571381[396] = 0;
   out_9124384806770571381[397] = 0;
   out_9124384806770571381[398] = 0;
   out_9124384806770571381[399] = 0;
   out_9124384806770571381[400] = 0;
   out_9124384806770571381[401] = 0;
   out_9124384806770571381[402] = 0;
   out_9124384806770571381[403] = 0;
   out_9124384806770571381[404] = 0;
   out_9124384806770571381[405] = 0;
   out_9124384806770571381[406] = 0;
   out_9124384806770571381[407] = 0;
   out_9124384806770571381[408] = 0;
   out_9124384806770571381[409] = 0;
   out_9124384806770571381[410] = 0;
   out_9124384806770571381[411] = 0;
   out_9124384806770571381[412] = 0;
   out_9124384806770571381[413] = 0;
   out_9124384806770571381[414] = 0;
   out_9124384806770571381[415] = 0;
   out_9124384806770571381[416] = 0;
   out_9124384806770571381[417] = 1.0;
   out_9124384806770571381[418] = 0;
   out_9124384806770571381[419] = 0;
   out_9124384806770571381[420] = 0;
   out_9124384806770571381[421] = 0;
   out_9124384806770571381[422] = 0;
   out_9124384806770571381[423] = 0;
   out_9124384806770571381[424] = 0;
   out_9124384806770571381[425] = 0;
   out_9124384806770571381[426] = 0;
   out_9124384806770571381[427] = 0;
   out_9124384806770571381[428] = 0;
   out_9124384806770571381[429] = 0;
   out_9124384806770571381[430] = 0;
   out_9124384806770571381[431] = 0;
   out_9124384806770571381[432] = 0;
   out_9124384806770571381[433] = 0;
   out_9124384806770571381[434] = 0;
   out_9124384806770571381[435] = 0;
   out_9124384806770571381[436] = 0;
   out_9124384806770571381[437] = 0;
   out_9124384806770571381[438] = 0;
   out_9124384806770571381[439] = 1.0;
   out_9124384806770571381[440] = 0;
   out_9124384806770571381[441] = 0;
   out_9124384806770571381[442] = 0;
   out_9124384806770571381[443] = 0;
   out_9124384806770571381[444] = 0;
   out_9124384806770571381[445] = 0;
   out_9124384806770571381[446] = 0;
   out_9124384806770571381[447] = 0;
   out_9124384806770571381[448] = 0;
   out_9124384806770571381[449] = 0;
   out_9124384806770571381[450] = 0;
   out_9124384806770571381[451] = 0;
   out_9124384806770571381[452] = 0;
   out_9124384806770571381[453] = 0;
   out_9124384806770571381[454] = 0;
   out_9124384806770571381[455] = 0;
   out_9124384806770571381[456] = 0;
   out_9124384806770571381[457] = 0;
   out_9124384806770571381[458] = 0;
   out_9124384806770571381[459] = 0;
   out_9124384806770571381[460] = 0;
   out_9124384806770571381[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_9188504082434773062) {
   out_9188504082434773062[0] = dt*state[7] + state[0];
   out_9188504082434773062[1] = dt*state[8] + state[1];
   out_9188504082434773062[2] = dt*state[9] + state[2];
   out_9188504082434773062[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_9188504082434773062[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_9188504082434773062[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_9188504082434773062[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_9188504082434773062[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_9188504082434773062[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_9188504082434773062[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_9188504082434773062[10] = state[10];
   out_9188504082434773062[11] = state[11];
   out_9188504082434773062[12] = state[12];
   out_9188504082434773062[13] = state[13];
   out_9188504082434773062[14] = state[14];
   out_9188504082434773062[15] = state[15];
   out_9188504082434773062[16] = state[16];
   out_9188504082434773062[17] = state[17];
   out_9188504082434773062[18] = state[18];
   out_9188504082434773062[19] = state[19];
   out_9188504082434773062[20] = state[20];
   out_9188504082434773062[21] = state[21];
}
void F_fun(double *state, double dt, double *out_5766622881826669580) {
   out_5766622881826669580[0] = 1;
   out_5766622881826669580[1] = 0;
   out_5766622881826669580[2] = 0;
   out_5766622881826669580[3] = 0;
   out_5766622881826669580[4] = 0;
   out_5766622881826669580[5] = 0;
   out_5766622881826669580[6] = dt;
   out_5766622881826669580[7] = 0;
   out_5766622881826669580[8] = 0;
   out_5766622881826669580[9] = 0;
   out_5766622881826669580[10] = 0;
   out_5766622881826669580[11] = 0;
   out_5766622881826669580[12] = 0;
   out_5766622881826669580[13] = 0;
   out_5766622881826669580[14] = 0;
   out_5766622881826669580[15] = 0;
   out_5766622881826669580[16] = 0;
   out_5766622881826669580[17] = 0;
   out_5766622881826669580[18] = 0;
   out_5766622881826669580[19] = 0;
   out_5766622881826669580[20] = 0;
   out_5766622881826669580[21] = 0;
   out_5766622881826669580[22] = 1;
   out_5766622881826669580[23] = 0;
   out_5766622881826669580[24] = 0;
   out_5766622881826669580[25] = 0;
   out_5766622881826669580[26] = 0;
   out_5766622881826669580[27] = 0;
   out_5766622881826669580[28] = dt;
   out_5766622881826669580[29] = 0;
   out_5766622881826669580[30] = 0;
   out_5766622881826669580[31] = 0;
   out_5766622881826669580[32] = 0;
   out_5766622881826669580[33] = 0;
   out_5766622881826669580[34] = 0;
   out_5766622881826669580[35] = 0;
   out_5766622881826669580[36] = 0;
   out_5766622881826669580[37] = 0;
   out_5766622881826669580[38] = 0;
   out_5766622881826669580[39] = 0;
   out_5766622881826669580[40] = 0;
   out_5766622881826669580[41] = 0;
   out_5766622881826669580[42] = 0;
   out_5766622881826669580[43] = 0;
   out_5766622881826669580[44] = 1;
   out_5766622881826669580[45] = 0;
   out_5766622881826669580[46] = 0;
   out_5766622881826669580[47] = 0;
   out_5766622881826669580[48] = 0;
   out_5766622881826669580[49] = 0;
   out_5766622881826669580[50] = dt;
   out_5766622881826669580[51] = 0;
   out_5766622881826669580[52] = 0;
   out_5766622881826669580[53] = 0;
   out_5766622881826669580[54] = 0;
   out_5766622881826669580[55] = 0;
   out_5766622881826669580[56] = 0;
   out_5766622881826669580[57] = 0;
   out_5766622881826669580[58] = 0;
   out_5766622881826669580[59] = 0;
   out_5766622881826669580[60] = 0;
   out_5766622881826669580[61] = 0;
   out_5766622881826669580[62] = 0;
   out_5766622881826669580[63] = 0;
   out_5766622881826669580[64] = 0;
   out_5766622881826669580[65] = 0;
   out_5766622881826669580[66] = 1;
   out_5766622881826669580[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_5766622881826669580[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_5766622881826669580[69] = 0;
   out_5766622881826669580[70] = 0;
   out_5766622881826669580[71] = 0;
   out_5766622881826669580[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5766622881826669580[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5766622881826669580[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5766622881826669580[75] = 0;
   out_5766622881826669580[76] = 0;
   out_5766622881826669580[77] = 0;
   out_5766622881826669580[78] = 0;
   out_5766622881826669580[79] = 0;
   out_5766622881826669580[80] = 0;
   out_5766622881826669580[81] = 0;
   out_5766622881826669580[82] = 0;
   out_5766622881826669580[83] = 0;
   out_5766622881826669580[84] = 0;
   out_5766622881826669580[85] = 0;
   out_5766622881826669580[86] = 0;
   out_5766622881826669580[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_5766622881826669580[88] = 1;
   out_5766622881826669580[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_5766622881826669580[90] = 0;
   out_5766622881826669580[91] = 0;
   out_5766622881826669580[92] = 0;
   out_5766622881826669580[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5766622881826669580[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5766622881826669580[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5766622881826669580[96] = 0;
   out_5766622881826669580[97] = 0;
   out_5766622881826669580[98] = 0;
   out_5766622881826669580[99] = 0;
   out_5766622881826669580[100] = 0;
   out_5766622881826669580[101] = 0;
   out_5766622881826669580[102] = 0;
   out_5766622881826669580[103] = 0;
   out_5766622881826669580[104] = 0;
   out_5766622881826669580[105] = 0;
   out_5766622881826669580[106] = 0;
   out_5766622881826669580[107] = 0;
   out_5766622881826669580[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_5766622881826669580[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_5766622881826669580[110] = 1;
   out_5766622881826669580[111] = 0;
   out_5766622881826669580[112] = 0;
   out_5766622881826669580[113] = 0;
   out_5766622881826669580[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5766622881826669580[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5766622881826669580[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5766622881826669580[117] = 0;
   out_5766622881826669580[118] = 0;
   out_5766622881826669580[119] = 0;
   out_5766622881826669580[120] = 0;
   out_5766622881826669580[121] = 0;
   out_5766622881826669580[122] = 0;
   out_5766622881826669580[123] = 0;
   out_5766622881826669580[124] = 0;
   out_5766622881826669580[125] = 0;
   out_5766622881826669580[126] = 0;
   out_5766622881826669580[127] = 0;
   out_5766622881826669580[128] = 0;
   out_5766622881826669580[129] = 0;
   out_5766622881826669580[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_5766622881826669580[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_5766622881826669580[132] = 1;
   out_5766622881826669580[133] = 0;
   out_5766622881826669580[134] = 0;
   out_5766622881826669580[135] = 0;
   out_5766622881826669580[136] = 0;
   out_5766622881826669580[137] = 0;
   out_5766622881826669580[138] = 0;
   out_5766622881826669580[139] = 0;
   out_5766622881826669580[140] = 0;
   out_5766622881826669580[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5766622881826669580[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5766622881826669580[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5766622881826669580[144] = 0;
   out_5766622881826669580[145] = 0;
   out_5766622881826669580[146] = 0;
   out_5766622881826669580[147] = 0;
   out_5766622881826669580[148] = 0;
   out_5766622881826669580[149] = 0;
   out_5766622881826669580[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_5766622881826669580[151] = 0;
   out_5766622881826669580[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_5766622881826669580[153] = 0;
   out_5766622881826669580[154] = 1;
   out_5766622881826669580[155] = 0;
   out_5766622881826669580[156] = 0;
   out_5766622881826669580[157] = 0;
   out_5766622881826669580[158] = 0;
   out_5766622881826669580[159] = 0;
   out_5766622881826669580[160] = 0;
   out_5766622881826669580[161] = 0;
   out_5766622881826669580[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5766622881826669580[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5766622881826669580[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5766622881826669580[165] = 0;
   out_5766622881826669580[166] = 0;
   out_5766622881826669580[167] = 0;
   out_5766622881826669580[168] = 0;
   out_5766622881826669580[169] = 0;
   out_5766622881826669580[170] = 0;
   out_5766622881826669580[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_5766622881826669580[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_5766622881826669580[173] = 0;
   out_5766622881826669580[174] = 0;
   out_5766622881826669580[175] = 0;
   out_5766622881826669580[176] = 1;
   out_5766622881826669580[177] = 0;
   out_5766622881826669580[178] = 0;
   out_5766622881826669580[179] = 0;
   out_5766622881826669580[180] = 0;
   out_5766622881826669580[181] = 0;
   out_5766622881826669580[182] = 0;
   out_5766622881826669580[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5766622881826669580[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5766622881826669580[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5766622881826669580[186] = 0;
   out_5766622881826669580[187] = 0;
   out_5766622881826669580[188] = 0;
   out_5766622881826669580[189] = 0;
   out_5766622881826669580[190] = 0;
   out_5766622881826669580[191] = 0;
   out_5766622881826669580[192] = 0;
   out_5766622881826669580[193] = 0;
   out_5766622881826669580[194] = 0;
   out_5766622881826669580[195] = 0;
   out_5766622881826669580[196] = 0;
   out_5766622881826669580[197] = 0;
   out_5766622881826669580[198] = 1;
   out_5766622881826669580[199] = 0;
   out_5766622881826669580[200] = 0;
   out_5766622881826669580[201] = 0;
   out_5766622881826669580[202] = 0;
   out_5766622881826669580[203] = 0;
   out_5766622881826669580[204] = 0;
   out_5766622881826669580[205] = 0;
   out_5766622881826669580[206] = 0;
   out_5766622881826669580[207] = 0;
   out_5766622881826669580[208] = 0;
   out_5766622881826669580[209] = 0;
   out_5766622881826669580[210] = 0;
   out_5766622881826669580[211] = 0;
   out_5766622881826669580[212] = 0;
   out_5766622881826669580[213] = 0;
   out_5766622881826669580[214] = 0;
   out_5766622881826669580[215] = 0;
   out_5766622881826669580[216] = 0;
   out_5766622881826669580[217] = 0;
   out_5766622881826669580[218] = 0;
   out_5766622881826669580[219] = 0;
   out_5766622881826669580[220] = 1;
   out_5766622881826669580[221] = 0;
   out_5766622881826669580[222] = 0;
   out_5766622881826669580[223] = 0;
   out_5766622881826669580[224] = 0;
   out_5766622881826669580[225] = 0;
   out_5766622881826669580[226] = 0;
   out_5766622881826669580[227] = 0;
   out_5766622881826669580[228] = 0;
   out_5766622881826669580[229] = 0;
   out_5766622881826669580[230] = 0;
   out_5766622881826669580[231] = 0;
   out_5766622881826669580[232] = 0;
   out_5766622881826669580[233] = 0;
   out_5766622881826669580[234] = 0;
   out_5766622881826669580[235] = 0;
   out_5766622881826669580[236] = 0;
   out_5766622881826669580[237] = 0;
   out_5766622881826669580[238] = 0;
   out_5766622881826669580[239] = 0;
   out_5766622881826669580[240] = 0;
   out_5766622881826669580[241] = 0;
   out_5766622881826669580[242] = 1;
   out_5766622881826669580[243] = 0;
   out_5766622881826669580[244] = 0;
   out_5766622881826669580[245] = 0;
   out_5766622881826669580[246] = 0;
   out_5766622881826669580[247] = 0;
   out_5766622881826669580[248] = 0;
   out_5766622881826669580[249] = 0;
   out_5766622881826669580[250] = 0;
   out_5766622881826669580[251] = 0;
   out_5766622881826669580[252] = 0;
   out_5766622881826669580[253] = 0;
   out_5766622881826669580[254] = 0;
   out_5766622881826669580[255] = 0;
   out_5766622881826669580[256] = 0;
   out_5766622881826669580[257] = 0;
   out_5766622881826669580[258] = 0;
   out_5766622881826669580[259] = 0;
   out_5766622881826669580[260] = 0;
   out_5766622881826669580[261] = 0;
   out_5766622881826669580[262] = 0;
   out_5766622881826669580[263] = 0;
   out_5766622881826669580[264] = 1;
   out_5766622881826669580[265] = 0;
   out_5766622881826669580[266] = 0;
   out_5766622881826669580[267] = 0;
   out_5766622881826669580[268] = 0;
   out_5766622881826669580[269] = 0;
   out_5766622881826669580[270] = 0;
   out_5766622881826669580[271] = 0;
   out_5766622881826669580[272] = 0;
   out_5766622881826669580[273] = 0;
   out_5766622881826669580[274] = 0;
   out_5766622881826669580[275] = 0;
   out_5766622881826669580[276] = 0;
   out_5766622881826669580[277] = 0;
   out_5766622881826669580[278] = 0;
   out_5766622881826669580[279] = 0;
   out_5766622881826669580[280] = 0;
   out_5766622881826669580[281] = 0;
   out_5766622881826669580[282] = 0;
   out_5766622881826669580[283] = 0;
   out_5766622881826669580[284] = 0;
   out_5766622881826669580[285] = 0;
   out_5766622881826669580[286] = 1;
   out_5766622881826669580[287] = 0;
   out_5766622881826669580[288] = 0;
   out_5766622881826669580[289] = 0;
   out_5766622881826669580[290] = 0;
   out_5766622881826669580[291] = 0;
   out_5766622881826669580[292] = 0;
   out_5766622881826669580[293] = 0;
   out_5766622881826669580[294] = 0;
   out_5766622881826669580[295] = 0;
   out_5766622881826669580[296] = 0;
   out_5766622881826669580[297] = 0;
   out_5766622881826669580[298] = 0;
   out_5766622881826669580[299] = 0;
   out_5766622881826669580[300] = 0;
   out_5766622881826669580[301] = 0;
   out_5766622881826669580[302] = 0;
   out_5766622881826669580[303] = 0;
   out_5766622881826669580[304] = 0;
   out_5766622881826669580[305] = 0;
   out_5766622881826669580[306] = 0;
   out_5766622881826669580[307] = 0;
   out_5766622881826669580[308] = 1;
   out_5766622881826669580[309] = 0;
   out_5766622881826669580[310] = 0;
   out_5766622881826669580[311] = 0;
   out_5766622881826669580[312] = 0;
   out_5766622881826669580[313] = 0;
   out_5766622881826669580[314] = 0;
   out_5766622881826669580[315] = 0;
   out_5766622881826669580[316] = 0;
   out_5766622881826669580[317] = 0;
   out_5766622881826669580[318] = 0;
   out_5766622881826669580[319] = 0;
   out_5766622881826669580[320] = 0;
   out_5766622881826669580[321] = 0;
   out_5766622881826669580[322] = 0;
   out_5766622881826669580[323] = 0;
   out_5766622881826669580[324] = 0;
   out_5766622881826669580[325] = 0;
   out_5766622881826669580[326] = 0;
   out_5766622881826669580[327] = 0;
   out_5766622881826669580[328] = 0;
   out_5766622881826669580[329] = 0;
   out_5766622881826669580[330] = 1;
   out_5766622881826669580[331] = 0;
   out_5766622881826669580[332] = 0;
   out_5766622881826669580[333] = 0;
   out_5766622881826669580[334] = 0;
   out_5766622881826669580[335] = 0;
   out_5766622881826669580[336] = 0;
   out_5766622881826669580[337] = 0;
   out_5766622881826669580[338] = 0;
   out_5766622881826669580[339] = 0;
   out_5766622881826669580[340] = 0;
   out_5766622881826669580[341] = 0;
   out_5766622881826669580[342] = 0;
   out_5766622881826669580[343] = 0;
   out_5766622881826669580[344] = 0;
   out_5766622881826669580[345] = 0;
   out_5766622881826669580[346] = 0;
   out_5766622881826669580[347] = 0;
   out_5766622881826669580[348] = 0;
   out_5766622881826669580[349] = 0;
   out_5766622881826669580[350] = 0;
   out_5766622881826669580[351] = 0;
   out_5766622881826669580[352] = 1;
   out_5766622881826669580[353] = 0;
   out_5766622881826669580[354] = 0;
   out_5766622881826669580[355] = 0;
   out_5766622881826669580[356] = 0;
   out_5766622881826669580[357] = 0;
   out_5766622881826669580[358] = 0;
   out_5766622881826669580[359] = 0;
   out_5766622881826669580[360] = 0;
   out_5766622881826669580[361] = 0;
   out_5766622881826669580[362] = 0;
   out_5766622881826669580[363] = 0;
   out_5766622881826669580[364] = 0;
   out_5766622881826669580[365] = 0;
   out_5766622881826669580[366] = 0;
   out_5766622881826669580[367] = 0;
   out_5766622881826669580[368] = 0;
   out_5766622881826669580[369] = 0;
   out_5766622881826669580[370] = 0;
   out_5766622881826669580[371] = 0;
   out_5766622881826669580[372] = 0;
   out_5766622881826669580[373] = 0;
   out_5766622881826669580[374] = 1;
   out_5766622881826669580[375] = 0;
   out_5766622881826669580[376] = 0;
   out_5766622881826669580[377] = 0;
   out_5766622881826669580[378] = 0;
   out_5766622881826669580[379] = 0;
   out_5766622881826669580[380] = 0;
   out_5766622881826669580[381] = 0;
   out_5766622881826669580[382] = 0;
   out_5766622881826669580[383] = 0;
   out_5766622881826669580[384] = 0;
   out_5766622881826669580[385] = 0;
   out_5766622881826669580[386] = 0;
   out_5766622881826669580[387] = 0;
   out_5766622881826669580[388] = 0;
   out_5766622881826669580[389] = 0;
   out_5766622881826669580[390] = 0;
   out_5766622881826669580[391] = 0;
   out_5766622881826669580[392] = 0;
   out_5766622881826669580[393] = 0;
   out_5766622881826669580[394] = 0;
   out_5766622881826669580[395] = 0;
   out_5766622881826669580[396] = 1;
   out_5766622881826669580[397] = 0;
   out_5766622881826669580[398] = 0;
   out_5766622881826669580[399] = 0;
   out_5766622881826669580[400] = 0;
   out_5766622881826669580[401] = 0;
   out_5766622881826669580[402] = 0;
   out_5766622881826669580[403] = 0;
   out_5766622881826669580[404] = 0;
   out_5766622881826669580[405] = 0;
   out_5766622881826669580[406] = 0;
   out_5766622881826669580[407] = 0;
   out_5766622881826669580[408] = 0;
   out_5766622881826669580[409] = 0;
   out_5766622881826669580[410] = 0;
   out_5766622881826669580[411] = 0;
   out_5766622881826669580[412] = 0;
   out_5766622881826669580[413] = 0;
   out_5766622881826669580[414] = 0;
   out_5766622881826669580[415] = 0;
   out_5766622881826669580[416] = 0;
   out_5766622881826669580[417] = 0;
   out_5766622881826669580[418] = 1;
   out_5766622881826669580[419] = 0;
   out_5766622881826669580[420] = 0;
   out_5766622881826669580[421] = 0;
   out_5766622881826669580[422] = 0;
   out_5766622881826669580[423] = 0;
   out_5766622881826669580[424] = 0;
   out_5766622881826669580[425] = 0;
   out_5766622881826669580[426] = 0;
   out_5766622881826669580[427] = 0;
   out_5766622881826669580[428] = 0;
   out_5766622881826669580[429] = 0;
   out_5766622881826669580[430] = 0;
   out_5766622881826669580[431] = 0;
   out_5766622881826669580[432] = 0;
   out_5766622881826669580[433] = 0;
   out_5766622881826669580[434] = 0;
   out_5766622881826669580[435] = 0;
   out_5766622881826669580[436] = 0;
   out_5766622881826669580[437] = 0;
   out_5766622881826669580[438] = 0;
   out_5766622881826669580[439] = 0;
   out_5766622881826669580[440] = 1;
}
void h_4(double *state, double *unused, double *out_8885787855636796251) {
   out_8885787855636796251[0] = state[10] + state[13];
   out_8885787855636796251[1] = state[11] + state[14];
   out_8885787855636796251[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_463036728120118219) {
   out_463036728120118219[0] = 0;
   out_463036728120118219[1] = 0;
   out_463036728120118219[2] = 0;
   out_463036728120118219[3] = 0;
   out_463036728120118219[4] = 0;
   out_463036728120118219[5] = 0;
   out_463036728120118219[6] = 0;
   out_463036728120118219[7] = 0;
   out_463036728120118219[8] = 0;
   out_463036728120118219[9] = 0;
   out_463036728120118219[10] = 1;
   out_463036728120118219[11] = 0;
   out_463036728120118219[12] = 0;
   out_463036728120118219[13] = 1;
   out_463036728120118219[14] = 0;
   out_463036728120118219[15] = 0;
   out_463036728120118219[16] = 0;
   out_463036728120118219[17] = 0;
   out_463036728120118219[18] = 0;
   out_463036728120118219[19] = 0;
   out_463036728120118219[20] = 0;
   out_463036728120118219[21] = 0;
   out_463036728120118219[22] = 0;
   out_463036728120118219[23] = 0;
   out_463036728120118219[24] = 0;
   out_463036728120118219[25] = 0;
   out_463036728120118219[26] = 0;
   out_463036728120118219[27] = 0;
   out_463036728120118219[28] = 0;
   out_463036728120118219[29] = 0;
   out_463036728120118219[30] = 0;
   out_463036728120118219[31] = 0;
   out_463036728120118219[32] = 0;
   out_463036728120118219[33] = 1;
   out_463036728120118219[34] = 0;
   out_463036728120118219[35] = 0;
   out_463036728120118219[36] = 1;
   out_463036728120118219[37] = 0;
   out_463036728120118219[38] = 0;
   out_463036728120118219[39] = 0;
   out_463036728120118219[40] = 0;
   out_463036728120118219[41] = 0;
   out_463036728120118219[42] = 0;
   out_463036728120118219[43] = 0;
   out_463036728120118219[44] = 0;
   out_463036728120118219[45] = 0;
   out_463036728120118219[46] = 0;
   out_463036728120118219[47] = 0;
   out_463036728120118219[48] = 0;
   out_463036728120118219[49] = 0;
   out_463036728120118219[50] = 0;
   out_463036728120118219[51] = 0;
   out_463036728120118219[52] = 0;
   out_463036728120118219[53] = 0;
   out_463036728120118219[54] = 0;
   out_463036728120118219[55] = 0;
   out_463036728120118219[56] = 1;
   out_463036728120118219[57] = 0;
   out_463036728120118219[58] = 0;
   out_463036728120118219[59] = 1;
   out_463036728120118219[60] = 0;
   out_463036728120118219[61] = 0;
   out_463036728120118219[62] = 0;
   out_463036728120118219[63] = 0;
   out_463036728120118219[64] = 0;
   out_463036728120118219[65] = 0;
}
void h_9(double *state, double *unused, double *out_3991381877534412098) {
   out_3991381877534412098[0] = state[10];
   out_3991381877534412098[1] = state[11];
   out_3991381877534412098[2] = state[12];
}
void H_9(double *state, double *unused, double *out_221847081490527574) {
   out_221847081490527574[0] = 0;
   out_221847081490527574[1] = 0;
   out_221847081490527574[2] = 0;
   out_221847081490527574[3] = 0;
   out_221847081490527574[4] = 0;
   out_221847081490527574[5] = 0;
   out_221847081490527574[6] = 0;
   out_221847081490527574[7] = 0;
   out_221847081490527574[8] = 0;
   out_221847081490527574[9] = 0;
   out_221847081490527574[10] = 1;
   out_221847081490527574[11] = 0;
   out_221847081490527574[12] = 0;
   out_221847081490527574[13] = 0;
   out_221847081490527574[14] = 0;
   out_221847081490527574[15] = 0;
   out_221847081490527574[16] = 0;
   out_221847081490527574[17] = 0;
   out_221847081490527574[18] = 0;
   out_221847081490527574[19] = 0;
   out_221847081490527574[20] = 0;
   out_221847081490527574[21] = 0;
   out_221847081490527574[22] = 0;
   out_221847081490527574[23] = 0;
   out_221847081490527574[24] = 0;
   out_221847081490527574[25] = 0;
   out_221847081490527574[26] = 0;
   out_221847081490527574[27] = 0;
   out_221847081490527574[28] = 0;
   out_221847081490527574[29] = 0;
   out_221847081490527574[30] = 0;
   out_221847081490527574[31] = 0;
   out_221847081490527574[32] = 0;
   out_221847081490527574[33] = 1;
   out_221847081490527574[34] = 0;
   out_221847081490527574[35] = 0;
   out_221847081490527574[36] = 0;
   out_221847081490527574[37] = 0;
   out_221847081490527574[38] = 0;
   out_221847081490527574[39] = 0;
   out_221847081490527574[40] = 0;
   out_221847081490527574[41] = 0;
   out_221847081490527574[42] = 0;
   out_221847081490527574[43] = 0;
   out_221847081490527574[44] = 0;
   out_221847081490527574[45] = 0;
   out_221847081490527574[46] = 0;
   out_221847081490527574[47] = 0;
   out_221847081490527574[48] = 0;
   out_221847081490527574[49] = 0;
   out_221847081490527574[50] = 0;
   out_221847081490527574[51] = 0;
   out_221847081490527574[52] = 0;
   out_221847081490527574[53] = 0;
   out_221847081490527574[54] = 0;
   out_221847081490527574[55] = 0;
   out_221847081490527574[56] = 1;
   out_221847081490527574[57] = 0;
   out_221847081490527574[58] = 0;
   out_221847081490527574[59] = 0;
   out_221847081490527574[60] = 0;
   out_221847081490527574[61] = 0;
   out_221847081490527574[62] = 0;
   out_221847081490527574[63] = 0;
   out_221847081490527574[64] = 0;
   out_221847081490527574[65] = 0;
}
void h_10(double *state, double *unused, double *out_4759164273606619881) {
   out_4759164273606619881[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_4759164273606619881[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_4759164273606619881[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_977931642135124192) {
   out_977931642135124192[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_977931642135124192[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_977931642135124192[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_977931642135124192[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_977931642135124192[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_977931642135124192[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_977931642135124192[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_977931642135124192[7] = 0;
   out_977931642135124192[8] = 0;
   out_977931642135124192[9] = 0;
   out_977931642135124192[10] = 0;
   out_977931642135124192[11] = 0;
   out_977931642135124192[12] = 0;
   out_977931642135124192[13] = 0;
   out_977931642135124192[14] = 0;
   out_977931642135124192[15] = 0;
   out_977931642135124192[16] = 1;
   out_977931642135124192[17] = 0;
   out_977931642135124192[18] = 0;
   out_977931642135124192[19] = 1;
   out_977931642135124192[20] = 0;
   out_977931642135124192[21] = 0;
   out_977931642135124192[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_977931642135124192[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_977931642135124192[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_977931642135124192[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_977931642135124192[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_977931642135124192[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_977931642135124192[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_977931642135124192[29] = 0;
   out_977931642135124192[30] = 0;
   out_977931642135124192[31] = 0;
   out_977931642135124192[32] = 0;
   out_977931642135124192[33] = 0;
   out_977931642135124192[34] = 0;
   out_977931642135124192[35] = 0;
   out_977931642135124192[36] = 0;
   out_977931642135124192[37] = 0;
   out_977931642135124192[38] = 0;
   out_977931642135124192[39] = 1;
   out_977931642135124192[40] = 0;
   out_977931642135124192[41] = 0;
   out_977931642135124192[42] = 1;
   out_977931642135124192[43] = 0;
   out_977931642135124192[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_977931642135124192[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_977931642135124192[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_977931642135124192[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_977931642135124192[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_977931642135124192[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_977931642135124192[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_977931642135124192[51] = 0;
   out_977931642135124192[52] = 0;
   out_977931642135124192[53] = 0;
   out_977931642135124192[54] = 0;
   out_977931642135124192[55] = 0;
   out_977931642135124192[56] = 0;
   out_977931642135124192[57] = 0;
   out_977931642135124192[58] = 0;
   out_977931642135124192[59] = 0;
   out_977931642135124192[60] = 0;
   out_977931642135124192[61] = 0;
   out_977931642135124192[62] = 1;
   out_977931642135124192[63] = 0;
   out_977931642135124192[64] = 0;
   out_977931642135124192[65] = 1;
}
void h_12(double *state, double *unused, double *out_4727203131249792018) {
   out_4727203131249792018[0] = state[0];
   out_4727203131249792018[1] = state[1];
   out_4727203131249792018[2] = state[2];
}
void H_12(double *state, double *unused, double *out_4556419679911843576) {
   out_4556419679911843576[0] = 1;
   out_4556419679911843576[1] = 0;
   out_4556419679911843576[2] = 0;
   out_4556419679911843576[3] = 0;
   out_4556419679911843576[4] = 0;
   out_4556419679911843576[5] = 0;
   out_4556419679911843576[6] = 0;
   out_4556419679911843576[7] = 0;
   out_4556419679911843576[8] = 0;
   out_4556419679911843576[9] = 0;
   out_4556419679911843576[10] = 0;
   out_4556419679911843576[11] = 0;
   out_4556419679911843576[12] = 0;
   out_4556419679911843576[13] = 0;
   out_4556419679911843576[14] = 0;
   out_4556419679911843576[15] = 0;
   out_4556419679911843576[16] = 0;
   out_4556419679911843576[17] = 0;
   out_4556419679911843576[18] = 0;
   out_4556419679911843576[19] = 0;
   out_4556419679911843576[20] = 0;
   out_4556419679911843576[21] = 0;
   out_4556419679911843576[22] = 0;
   out_4556419679911843576[23] = 1;
   out_4556419679911843576[24] = 0;
   out_4556419679911843576[25] = 0;
   out_4556419679911843576[26] = 0;
   out_4556419679911843576[27] = 0;
   out_4556419679911843576[28] = 0;
   out_4556419679911843576[29] = 0;
   out_4556419679911843576[30] = 0;
   out_4556419679911843576[31] = 0;
   out_4556419679911843576[32] = 0;
   out_4556419679911843576[33] = 0;
   out_4556419679911843576[34] = 0;
   out_4556419679911843576[35] = 0;
   out_4556419679911843576[36] = 0;
   out_4556419679911843576[37] = 0;
   out_4556419679911843576[38] = 0;
   out_4556419679911843576[39] = 0;
   out_4556419679911843576[40] = 0;
   out_4556419679911843576[41] = 0;
   out_4556419679911843576[42] = 0;
   out_4556419679911843576[43] = 0;
   out_4556419679911843576[44] = 0;
   out_4556419679911843576[45] = 0;
   out_4556419679911843576[46] = 1;
   out_4556419679911843576[47] = 0;
   out_4556419679911843576[48] = 0;
   out_4556419679911843576[49] = 0;
   out_4556419679911843576[50] = 0;
   out_4556419679911843576[51] = 0;
   out_4556419679911843576[52] = 0;
   out_4556419679911843576[53] = 0;
   out_4556419679911843576[54] = 0;
   out_4556419679911843576[55] = 0;
   out_4556419679911843576[56] = 0;
   out_4556419679911843576[57] = 0;
   out_4556419679911843576[58] = 0;
   out_4556419679911843576[59] = 0;
   out_4556419679911843576[60] = 0;
   out_4556419679911843576[61] = 0;
   out_4556419679911843576[62] = 0;
   out_4556419679911843576[63] = 0;
   out_4556419679911843576[64] = 0;
   out_4556419679911843576[65] = 0;
}
void h_31(double *state, double *unused, double *out_6081235033987281596) {
   out_6081235033987281596[0] = state[7];
   out_6081235033987281596[1] = state[8];
   out_6081235033987281596[2] = state[9];
}
void H_31(double *state, double *unused, double *out_7301982712236857285) {
   out_7301982712236857285[0] = 0;
   out_7301982712236857285[1] = 0;
   out_7301982712236857285[2] = 0;
   out_7301982712236857285[3] = 0;
   out_7301982712236857285[4] = 0;
   out_7301982712236857285[5] = 0;
   out_7301982712236857285[6] = 0;
   out_7301982712236857285[7] = 1;
   out_7301982712236857285[8] = 0;
   out_7301982712236857285[9] = 0;
   out_7301982712236857285[10] = 0;
   out_7301982712236857285[11] = 0;
   out_7301982712236857285[12] = 0;
   out_7301982712236857285[13] = 0;
   out_7301982712236857285[14] = 0;
   out_7301982712236857285[15] = 0;
   out_7301982712236857285[16] = 0;
   out_7301982712236857285[17] = 0;
   out_7301982712236857285[18] = 0;
   out_7301982712236857285[19] = 0;
   out_7301982712236857285[20] = 0;
   out_7301982712236857285[21] = 0;
   out_7301982712236857285[22] = 0;
   out_7301982712236857285[23] = 0;
   out_7301982712236857285[24] = 0;
   out_7301982712236857285[25] = 0;
   out_7301982712236857285[26] = 0;
   out_7301982712236857285[27] = 0;
   out_7301982712236857285[28] = 0;
   out_7301982712236857285[29] = 0;
   out_7301982712236857285[30] = 1;
   out_7301982712236857285[31] = 0;
   out_7301982712236857285[32] = 0;
   out_7301982712236857285[33] = 0;
   out_7301982712236857285[34] = 0;
   out_7301982712236857285[35] = 0;
   out_7301982712236857285[36] = 0;
   out_7301982712236857285[37] = 0;
   out_7301982712236857285[38] = 0;
   out_7301982712236857285[39] = 0;
   out_7301982712236857285[40] = 0;
   out_7301982712236857285[41] = 0;
   out_7301982712236857285[42] = 0;
   out_7301982712236857285[43] = 0;
   out_7301982712236857285[44] = 0;
   out_7301982712236857285[45] = 0;
   out_7301982712236857285[46] = 0;
   out_7301982712236857285[47] = 0;
   out_7301982712236857285[48] = 0;
   out_7301982712236857285[49] = 0;
   out_7301982712236857285[50] = 0;
   out_7301982712236857285[51] = 0;
   out_7301982712236857285[52] = 0;
   out_7301982712236857285[53] = 1;
   out_7301982712236857285[54] = 0;
   out_7301982712236857285[55] = 0;
   out_7301982712236857285[56] = 0;
   out_7301982712236857285[57] = 0;
   out_7301982712236857285[58] = 0;
   out_7301982712236857285[59] = 0;
   out_7301982712236857285[60] = 0;
   out_7301982712236857285[61] = 0;
   out_7301982712236857285[62] = 0;
   out_7301982712236857285[63] = 0;
   out_7301982712236857285[64] = 0;
   out_7301982712236857285[65] = 0;
}
void h_32(double *state, double *unused, double *out_760862035415444302) {
   out_760862035415444302[0] = state[3];
   out_760862035415444302[1] = state[4];
   out_760862035415444302[2] = state[5];
   out_760862035415444302[3] = state[6];
}
void H_32(double *state, double *unused, double *out_4011239174441627199) {
   out_4011239174441627199[0] = 0;
   out_4011239174441627199[1] = 0;
   out_4011239174441627199[2] = 0;
   out_4011239174441627199[3] = 1;
   out_4011239174441627199[4] = 0;
   out_4011239174441627199[5] = 0;
   out_4011239174441627199[6] = 0;
   out_4011239174441627199[7] = 0;
   out_4011239174441627199[8] = 0;
   out_4011239174441627199[9] = 0;
   out_4011239174441627199[10] = 0;
   out_4011239174441627199[11] = 0;
   out_4011239174441627199[12] = 0;
   out_4011239174441627199[13] = 0;
   out_4011239174441627199[14] = 0;
   out_4011239174441627199[15] = 0;
   out_4011239174441627199[16] = 0;
   out_4011239174441627199[17] = 0;
   out_4011239174441627199[18] = 0;
   out_4011239174441627199[19] = 0;
   out_4011239174441627199[20] = 0;
   out_4011239174441627199[21] = 0;
   out_4011239174441627199[22] = 0;
   out_4011239174441627199[23] = 0;
   out_4011239174441627199[24] = 0;
   out_4011239174441627199[25] = 0;
   out_4011239174441627199[26] = 1;
   out_4011239174441627199[27] = 0;
   out_4011239174441627199[28] = 0;
   out_4011239174441627199[29] = 0;
   out_4011239174441627199[30] = 0;
   out_4011239174441627199[31] = 0;
   out_4011239174441627199[32] = 0;
   out_4011239174441627199[33] = 0;
   out_4011239174441627199[34] = 0;
   out_4011239174441627199[35] = 0;
   out_4011239174441627199[36] = 0;
   out_4011239174441627199[37] = 0;
   out_4011239174441627199[38] = 0;
   out_4011239174441627199[39] = 0;
   out_4011239174441627199[40] = 0;
   out_4011239174441627199[41] = 0;
   out_4011239174441627199[42] = 0;
   out_4011239174441627199[43] = 0;
   out_4011239174441627199[44] = 0;
   out_4011239174441627199[45] = 0;
   out_4011239174441627199[46] = 0;
   out_4011239174441627199[47] = 0;
   out_4011239174441627199[48] = 0;
   out_4011239174441627199[49] = 1;
   out_4011239174441627199[50] = 0;
   out_4011239174441627199[51] = 0;
   out_4011239174441627199[52] = 0;
   out_4011239174441627199[53] = 0;
   out_4011239174441627199[54] = 0;
   out_4011239174441627199[55] = 0;
   out_4011239174441627199[56] = 0;
   out_4011239174441627199[57] = 0;
   out_4011239174441627199[58] = 0;
   out_4011239174441627199[59] = 0;
   out_4011239174441627199[60] = 0;
   out_4011239174441627199[61] = 0;
   out_4011239174441627199[62] = 0;
   out_4011239174441627199[63] = 0;
   out_4011239174441627199[64] = 0;
   out_4011239174441627199[65] = 0;
   out_4011239174441627199[66] = 0;
   out_4011239174441627199[67] = 0;
   out_4011239174441627199[68] = 0;
   out_4011239174441627199[69] = 0;
   out_4011239174441627199[70] = 0;
   out_4011239174441627199[71] = 0;
   out_4011239174441627199[72] = 1;
   out_4011239174441627199[73] = 0;
   out_4011239174441627199[74] = 0;
   out_4011239174441627199[75] = 0;
   out_4011239174441627199[76] = 0;
   out_4011239174441627199[77] = 0;
   out_4011239174441627199[78] = 0;
   out_4011239174441627199[79] = 0;
   out_4011239174441627199[80] = 0;
   out_4011239174441627199[81] = 0;
   out_4011239174441627199[82] = 0;
   out_4011239174441627199[83] = 0;
   out_4011239174441627199[84] = 0;
   out_4011239174441627199[85] = 0;
   out_4011239174441627199[86] = 0;
   out_4011239174441627199[87] = 0;
}
void h_13(double *state, double *unused, double *out_4917359291892214746) {
   out_4917359291892214746[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_4917359291892214746[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_4917359291892214746[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_9213972146494475321) {
   out_9213972146494475321[0] = 0;
   out_9213972146494475321[1] = 0;
   out_9213972146494475321[2] = 0;
   out_9213972146494475321[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_9213972146494475321[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_9213972146494475321[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_9213972146494475321[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_9213972146494475321[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_9213972146494475321[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_9213972146494475321[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_9213972146494475321[10] = 0;
   out_9213972146494475321[11] = 0;
   out_9213972146494475321[12] = 0;
   out_9213972146494475321[13] = 0;
   out_9213972146494475321[14] = 0;
   out_9213972146494475321[15] = 0;
   out_9213972146494475321[16] = 0;
   out_9213972146494475321[17] = 0;
   out_9213972146494475321[18] = 0;
   out_9213972146494475321[19] = 0;
   out_9213972146494475321[20] = 0;
   out_9213972146494475321[21] = 0;
   out_9213972146494475321[22] = 0;
   out_9213972146494475321[23] = 0;
   out_9213972146494475321[24] = 0;
   out_9213972146494475321[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_9213972146494475321[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_9213972146494475321[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_9213972146494475321[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_9213972146494475321[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_9213972146494475321[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_9213972146494475321[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_9213972146494475321[32] = 0;
   out_9213972146494475321[33] = 0;
   out_9213972146494475321[34] = 0;
   out_9213972146494475321[35] = 0;
   out_9213972146494475321[36] = 0;
   out_9213972146494475321[37] = 0;
   out_9213972146494475321[38] = 0;
   out_9213972146494475321[39] = 0;
   out_9213972146494475321[40] = 0;
   out_9213972146494475321[41] = 0;
   out_9213972146494475321[42] = 0;
   out_9213972146494475321[43] = 0;
   out_9213972146494475321[44] = 0;
   out_9213972146494475321[45] = 0;
   out_9213972146494475321[46] = 0;
   out_9213972146494475321[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_9213972146494475321[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_9213972146494475321[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_9213972146494475321[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_9213972146494475321[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_9213972146494475321[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_9213972146494475321[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_9213972146494475321[54] = 0;
   out_9213972146494475321[55] = 0;
   out_9213972146494475321[56] = 0;
   out_9213972146494475321[57] = 0;
   out_9213972146494475321[58] = 0;
   out_9213972146494475321[59] = 0;
   out_9213972146494475321[60] = 0;
   out_9213972146494475321[61] = 0;
   out_9213972146494475321[62] = 0;
   out_9213972146494475321[63] = 0;
   out_9213972146494475321[64] = 0;
   out_9213972146494475321[65] = 0;
}
void h_14(double *state, double *unused, double *out_3991381877534412098) {
   out_3991381877534412098[0] = state[10];
   out_3991381877534412098[1] = state[11];
   out_3991381877534412098[2] = state[12];
}
void H_14(double *state, double *unused, double *out_221847081490527574) {
   out_221847081490527574[0] = 0;
   out_221847081490527574[1] = 0;
   out_221847081490527574[2] = 0;
   out_221847081490527574[3] = 0;
   out_221847081490527574[4] = 0;
   out_221847081490527574[5] = 0;
   out_221847081490527574[6] = 0;
   out_221847081490527574[7] = 0;
   out_221847081490527574[8] = 0;
   out_221847081490527574[9] = 0;
   out_221847081490527574[10] = 1;
   out_221847081490527574[11] = 0;
   out_221847081490527574[12] = 0;
   out_221847081490527574[13] = 0;
   out_221847081490527574[14] = 0;
   out_221847081490527574[15] = 0;
   out_221847081490527574[16] = 0;
   out_221847081490527574[17] = 0;
   out_221847081490527574[18] = 0;
   out_221847081490527574[19] = 0;
   out_221847081490527574[20] = 0;
   out_221847081490527574[21] = 0;
   out_221847081490527574[22] = 0;
   out_221847081490527574[23] = 0;
   out_221847081490527574[24] = 0;
   out_221847081490527574[25] = 0;
   out_221847081490527574[26] = 0;
   out_221847081490527574[27] = 0;
   out_221847081490527574[28] = 0;
   out_221847081490527574[29] = 0;
   out_221847081490527574[30] = 0;
   out_221847081490527574[31] = 0;
   out_221847081490527574[32] = 0;
   out_221847081490527574[33] = 1;
   out_221847081490527574[34] = 0;
   out_221847081490527574[35] = 0;
   out_221847081490527574[36] = 0;
   out_221847081490527574[37] = 0;
   out_221847081490527574[38] = 0;
   out_221847081490527574[39] = 0;
   out_221847081490527574[40] = 0;
   out_221847081490527574[41] = 0;
   out_221847081490527574[42] = 0;
   out_221847081490527574[43] = 0;
   out_221847081490527574[44] = 0;
   out_221847081490527574[45] = 0;
   out_221847081490527574[46] = 0;
   out_221847081490527574[47] = 0;
   out_221847081490527574[48] = 0;
   out_221847081490527574[49] = 0;
   out_221847081490527574[50] = 0;
   out_221847081490527574[51] = 0;
   out_221847081490527574[52] = 0;
   out_221847081490527574[53] = 0;
   out_221847081490527574[54] = 0;
   out_221847081490527574[55] = 0;
   out_221847081490527574[56] = 1;
   out_221847081490527574[57] = 0;
   out_221847081490527574[58] = 0;
   out_221847081490527574[59] = 0;
   out_221847081490527574[60] = 0;
   out_221847081490527574[61] = 0;
   out_221847081490527574[62] = 0;
   out_221847081490527574[63] = 0;
   out_221847081490527574[64] = 0;
   out_221847081490527574[65] = 0;
}
void h_33(double *state, double *unused, double *out_5791450238291229571) {
   out_5791450238291229571[0] = state[16];
   out_5791450238291229571[1] = state[17];
   out_5791450238291229571[2] = state[18];
}
void H_33(double *state, double *unused, double *out_6054182333891346761) {
   out_6054182333891346761[0] = 0;
   out_6054182333891346761[1] = 0;
   out_6054182333891346761[2] = 0;
   out_6054182333891346761[3] = 0;
   out_6054182333891346761[4] = 0;
   out_6054182333891346761[5] = 0;
   out_6054182333891346761[6] = 0;
   out_6054182333891346761[7] = 0;
   out_6054182333891346761[8] = 0;
   out_6054182333891346761[9] = 0;
   out_6054182333891346761[10] = 0;
   out_6054182333891346761[11] = 0;
   out_6054182333891346761[12] = 0;
   out_6054182333891346761[13] = 0;
   out_6054182333891346761[14] = 0;
   out_6054182333891346761[15] = 0;
   out_6054182333891346761[16] = 1;
   out_6054182333891346761[17] = 0;
   out_6054182333891346761[18] = 0;
   out_6054182333891346761[19] = 0;
   out_6054182333891346761[20] = 0;
   out_6054182333891346761[21] = 0;
   out_6054182333891346761[22] = 0;
   out_6054182333891346761[23] = 0;
   out_6054182333891346761[24] = 0;
   out_6054182333891346761[25] = 0;
   out_6054182333891346761[26] = 0;
   out_6054182333891346761[27] = 0;
   out_6054182333891346761[28] = 0;
   out_6054182333891346761[29] = 0;
   out_6054182333891346761[30] = 0;
   out_6054182333891346761[31] = 0;
   out_6054182333891346761[32] = 0;
   out_6054182333891346761[33] = 0;
   out_6054182333891346761[34] = 0;
   out_6054182333891346761[35] = 0;
   out_6054182333891346761[36] = 0;
   out_6054182333891346761[37] = 0;
   out_6054182333891346761[38] = 0;
   out_6054182333891346761[39] = 1;
   out_6054182333891346761[40] = 0;
   out_6054182333891346761[41] = 0;
   out_6054182333891346761[42] = 0;
   out_6054182333891346761[43] = 0;
   out_6054182333891346761[44] = 0;
   out_6054182333891346761[45] = 0;
   out_6054182333891346761[46] = 0;
   out_6054182333891346761[47] = 0;
   out_6054182333891346761[48] = 0;
   out_6054182333891346761[49] = 0;
   out_6054182333891346761[50] = 0;
   out_6054182333891346761[51] = 0;
   out_6054182333891346761[52] = 0;
   out_6054182333891346761[53] = 0;
   out_6054182333891346761[54] = 0;
   out_6054182333891346761[55] = 0;
   out_6054182333891346761[56] = 0;
   out_6054182333891346761[57] = 0;
   out_6054182333891346761[58] = 0;
   out_6054182333891346761[59] = 0;
   out_6054182333891346761[60] = 0;
   out_6054182333891346761[61] = 0;
   out_6054182333891346761[62] = 1;
   out_6054182333891346761[63] = 0;
   out_6054182333891346761[64] = 0;
   out_6054182333891346761[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_31(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_31, H_31, NULL, in_z, in_R, in_ea, MAHA_THRESH_31);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_2503166590185590312) {
  H(in_vec, out_2503166590185590312);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_3794793126910250149) {
  err_fun(nom_x, delta_x, out_3794793126910250149);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_5930455572415847170) {
  inv_err_fun(nom_x, true_x, out_5930455572415847170);
}
void live_H_mod_fun(double *state, double *out_9124384806770571381) {
  H_mod_fun(state, out_9124384806770571381);
}
void live_f_fun(double *state, double dt, double *out_9188504082434773062) {
  f_fun(state,  dt, out_9188504082434773062);
}
void live_F_fun(double *state, double dt, double *out_5766622881826669580) {
  F_fun(state,  dt, out_5766622881826669580);
}
void live_h_4(double *state, double *unused, double *out_8885787855636796251) {
  h_4(state, unused, out_8885787855636796251);
}
void live_H_4(double *state, double *unused, double *out_463036728120118219) {
  H_4(state, unused, out_463036728120118219);
}
void live_h_9(double *state, double *unused, double *out_3991381877534412098) {
  h_9(state, unused, out_3991381877534412098);
}
void live_H_9(double *state, double *unused, double *out_221847081490527574) {
  H_9(state, unused, out_221847081490527574);
}
void live_h_10(double *state, double *unused, double *out_4759164273606619881) {
  h_10(state, unused, out_4759164273606619881);
}
void live_H_10(double *state, double *unused, double *out_977931642135124192) {
  H_10(state, unused, out_977931642135124192);
}
void live_h_12(double *state, double *unused, double *out_4727203131249792018) {
  h_12(state, unused, out_4727203131249792018);
}
void live_H_12(double *state, double *unused, double *out_4556419679911843576) {
  H_12(state, unused, out_4556419679911843576);
}
void live_h_31(double *state, double *unused, double *out_6081235033987281596) {
  h_31(state, unused, out_6081235033987281596);
}
void live_H_31(double *state, double *unused, double *out_7301982712236857285) {
  H_31(state, unused, out_7301982712236857285);
}
void live_h_32(double *state, double *unused, double *out_760862035415444302) {
  h_32(state, unused, out_760862035415444302);
}
void live_H_32(double *state, double *unused, double *out_4011239174441627199) {
  H_32(state, unused, out_4011239174441627199);
}
void live_h_13(double *state, double *unused, double *out_4917359291892214746) {
  h_13(state, unused, out_4917359291892214746);
}
void live_H_13(double *state, double *unused, double *out_9213972146494475321) {
  H_13(state, unused, out_9213972146494475321);
}
void live_h_14(double *state, double *unused, double *out_3991381877534412098) {
  h_14(state, unused, out_3991381877534412098);
}
void live_H_14(double *state, double *unused, double *out_221847081490527574) {
  H_14(state, unused, out_221847081490527574);
}
void live_h_33(double *state, double *unused, double *out_5791450238291229571) {
  h_33(state, unused, out_5791450238291229571);
}
void live_H_33(double *state, double *unused, double *out_6054182333891346761) {
  H_33(state, unused, out_6054182333891346761);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 31, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 31, live_h_31 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 31, live_H_31 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 31, live_update_31 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
